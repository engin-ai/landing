{"version":3,"sources":["images/white-logo-plus-name-final-01.svg","images/burger-icon-01.svg","images/cloud-computing-01-01.png","images/ai-process-01-01.png","images/report-vector-01-01.png","images/Creative_process_SVG.svg","images/pavement-without-ai.jpg","images/pavement-with-ai.jpg","images/Data_analysis_SVG.svg","images/Analytics_SVG.svg","images/City_SVG.svg","Navbar.js","components/DiagonalSpacer.js","containers/FormSpreeForm.js","Homepage.js","components/DataLabeling.js","components/DamageAnalysis.js","components/AiConsulting.js","containers/Demo.js","containers/ImageVisualizer.js","containers/Main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","props","_this","Object","classCallCheck","this","_super","call","targetElement","navbarOn","mobile","state","mobileNav","setState","disableBodyScroll","clearAllBodyScrollLocks","onLinkClick","e","preventDefault","l","target","name","history","push","document","querySelector","prevProps","location","onRouteChanged","spanish","browserLang","indexOf","menuOpen","mobileClassname","console","log","react_default","a","createElement","react","Responsive","onlyComputer","Segment","className","inverted","style","margin","position","width","zIndex","Menu","secondary","Item","href","Image","size","alt","src","Logo","active","pathname","Dropdown","item","text","options","key","value","onlyMobile","overflow","maxHeight","concat","height","onClick","Burger","vertical","lib","to","Component","withRouter","DiagonalSpacer","tilt","bColor","background","tiltClass","backgroundColor","FormSpreeForm","Form","display","action","method","Group","widths","Field","required","htmlFor","Input","id","type","placeholder","TextArea","rows","Button","React","Homepage","Helmet","content","property","http-equiv","basic","textTransform","syle","Icon","components_DiagonalSpacer","Container","Grid","centered","stackable","columns","divided","Column","container","Row","DataAnalysis","compact","padding","color","City","Analytics","Divider","verticalAlign","index_es","before","PavementSampleWith","after","PavementSampleWithout","defaultProgress","lineHeight","ConsultingImg","CloudComputing","AiProcess","ReportVector","textAlign","containers_FormSpreeForm","DataLabeling","backgroundImg","minHeight","backgroundImage","DamageAnalysis","AiConsulting","Demo","acceptedFiles","images","arrayBuffers","loading","detection","confidence","length","imgSize","handleDrop","bind","assertThisInitialized","handleSubmit","evt","_this2","forEach","file","formData","FormData","append","axios","post","process","headers","Content-Type","then","result","data","image","detection_img_url","toConsumableArray","damage","imgsize","catch","err","finally","_this3","fileNames","map","path","imgUrl","paddingTop","es","onDrop","_ref","getRootProps","getInputProps","assign","disabled","ImageVisualizer","parsedCsvData","withHeaders","withImages","imagesColumn","secondImageColumn","maxRowCount","startingRow","selectedRow","selectedRowIdx","nameCol","damageCol","qaGenerated","classificationGenerated","feedbackGenerated","usage","objective","qaDamageDetectedCorrectly","qaCorrectedDamage","classificationIsDamaged","classificationDamageName","feedbackImageHasDamage","feedbackDamageName1","feedbackDamageName2","feedbackDamageName3","feedbackDamage1Length","feedbackDamage2Length","feedbackDamage3Length","feedbackDamage1Width","feedbackDamage2Width","feedbackDamage3Width","feedbackComments","disableAdd","twoImages","startingRowCustomize","handleChange","reader","FileReader","filesArray","onabort","onerror","onload","csv","parse","columnList","str","idx","parsedFile","readAsBinaryString","defineProperty","grade","newDamage","newRow","qaArr","foundDamage","newDamage1","newDamage1Length","newDamage1Width","newDamage2","newDamage2Length","newDamage2Width","newDamage3","newDamage3Length","newDamage3Width","comments","configSectionWidth","visualSectionWidth","tableData","usgObj","imageDropdownOptions","header","dist","maxWidth","imageSrc","imageAlt","mouseActivation","touchActivation","slice","marginLeft","marginRight","search","selection","onChange","event","Checkbox","checked","label","toggle","hidden","fluid","overflowY","img","positive","react_csv","filename","newStartingRow","parseInt","icon","circular","link","overflowX","Table","headerRow","selectable","renderBodyRow","index","cells","Cell","cursor","imageArr","Main","react_router_dom","react_router","render","components_DataLabeling","components_DamageAnalysis","components_AiConsulting","containers_Demo","containers_ImageVisualizer","exact","src_Homepage","App","detectBrowserLanguage","toLowerCase","src_Navbar","containers_Main","Boolean","window","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c62c0270.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/white-logo-plus-name-final-01.ae4733f6.svg\";","module.exports = __webpack_public_path__ + \"static/media/burger-icon-01.eef32ba4.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloud-computing-01-01.76a8ebdf.png\";","module.exports = __webpack_public_path__ + \"static/media/ai-process-01-01.a493823f.png\";","module.exports = __webpack_public_path__ + \"static/media/report-vector-01-01.8feec911.png\";","module.exports = __webpack_public_path__ + \"static/media/Creative_process_SVG.002c7f52.svg\";","module.exports = __webpack_public_path__ + \"static/media/pavement-without-ai.d02eafd6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pavement-with-ai.ef770fa6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Data_analysis_SVG.781c725f.svg\";","module.exports = __webpack_public_path__ + \"static/media/Analytics_SVG.eb5c9f14.svg\";","module.exports = __webpack_public_path__ + \"static/media/City_SVG.1f3498c5.svg\";","import React, { Component, Fragment } from 'react';\r\nimport { Menu, Segment, Image, Responsive, Dropdown } from 'semantic-ui-react';\r\nimport Logo from \"./images/white-logo-plus-name-final-01.svg\";\r\nimport Burger from \"./images/burger-icon-01.svg\";\r\nimport './App.css';\r\nimport { HashLink as Link } from 'react-router-hash-link';\r\nimport { disableBodyScroll, clearAllBodyScrollLocks } from 'body-scroll-lock';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\n\r\nclass Navbar extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n        mobileNav : false,\r\n\r\n      }\r\n     \r\n  }\r\n  targetElement = null;\r\n  \r\n\r\n\r\n\r\n   componentDidMount() {\r\n    // 2. Get a target element that you want to persist scrolling for (such as a modal/lightbox/flyout/nav). \r\n    // Specifically, the target element is the one we would like to allow scroll on (NOT a parent of that element).\r\n    // This is also the element to apply the CSS '-webkit-overflow-scrolling: touch;' if desired.\r\n    this.targetElement = document.querySelector('.mobile-overlay');\r\n  }\r\n componentDidUpdate(prevProps) {\r\n    if (this.props.location !== prevProps.location) {\r\n      this.onRouteChanged();\r\n    }\r\n  }\r\n\r\n  onRouteChanged() {\r\n    \r\n    this.setState({mobileNav:false});\r\n    clearAllBodyScrollLocks();\r\n  }\r\n\r\n  navbarOn = ()=>{\r\n    let mobile = this.state.mobileNav;\r\n    //console.log(mobile);\r\n    \r\n    \r\n    this.setState({mobileNav:!mobile});\r\n    mobile = !mobile;\r\n    if(mobile){\r\n      disableBodyScroll(this.targetElement);  \r\n    }else{\r\n      clearAllBodyScrollLocks();\r\n    }\r\n  }\r\n\r\n  onLinkClick = (e)=>{\r\n    // console.log(e.target.name);\r\n    // console.log(\"clicked\");\r\n    // console.log(e);\r\n\r\n    e.preventDefault();\r\n    let l = e.target.name;\r\n    clearAllBodyScrollLocks();  \r\n    this.setState({mobileNav:false});\r\n    this.props.history.push(l);\r\n\r\n\r\n\r\n  }\r\n\r\n  render() {\r\n    const browserLang = this.props.browserLang;\r\n    const spanish = browserLang.indexOf(\"es\") > -1;\r\n    const indSpecDropdownOptions = [\r\n      { key: 1, text: 'Pavement Damage Analysis', value: 1, target:\"_self\",href:\"#/pavements-analysis\", className: \"navDropDownItem\" },\r\n    ]\r\n    let mobileNav = this.state.mobileNav;\r\n    let menuOpen = mobileNav? \"open\" : \"closed\";\r\n    let mobileClassname = \"mobile-overlay-closed\";\r\n    let location = this.props.location;\r\n    if(mobileNav){\r\n      mobileClassname = \"mobile-overlay-open\";\r\n    }\r\n    console.log(location);\r\n    return (\r\n      <Fragment>\r\n        <Responsive {...Responsive.onlyComputer}>\r\n        <Segment className=\"App-nav\" inverted style={{margin:\"0\",position:\"absolute\",\"width\":\"100%\", \"zIndex\":\"100\"}}>\r\n        <Menu inverted secondary>\r\n        <Menu.Item>\r\n        <a href=\"/\">\r\n          <Image size=\"small\" alt=\"engin.ai logo\" src={Logo}>\r\n          </Image>\r\n        </a>\r\n        </Menu.Item>         \r\n          <Menu.Menu position='right'>\r\n          <Menu.Item\r\n            name='Data-labeling'\r\n            active={location.pathname === \"/data-labeling\"}\r\n            href=\"#/data-labeling\"\r\n            target=\"_self\"\r\n          >\r\n            Data Labeling\r\n          </Menu.Item>\r\n\r\n          <Menu.Item\r\n            name='AI-Consulting'\r\n            target='_self'\r\n            active={location.pathname === \"/ai-consulting\"}\r\n            href=\"#/ai-consulting\"\r\n          >\r\n            AI Consulting\r\n          </Menu.Item>\r\n           <Menu.Item>\r\n            <Dropdown\r\n              item\r\n              text='Industry-Specific Solutions'\r\n            \r\n              options={indSpecDropdownOptions}\r\n            />\r\n          </Menu.Item>\r\n        </Menu.Menu>\r\n        </Menu>\r\n         \r\n      </Segment>\r\n       </Responsive>\r\n       <Responsive {...Responsive.onlyMobile}>\r\n       <div style={{\"overflow\":\"hidden\",\"maxHeight\":\"100vh\",\"zIndex\":\"200\"}}>\r\n         <div className={`mobile-overlay ${mobileClassname}`} style={{\"maxHeight\":\"150vh\"}}></div>\r\n       {mobileNav ? \r\n        <Fragment>\r\n          \r\n        <div style={{\"height\":\"100vh\",\"zIndex\":\"120\", \"position\":\"absolute\",\"width\":\"100%\"}}>\r\n         <Segment className=\"App-nav\" inverted >\r\n        <Menu inverted secondary>\r\n          <Menu.Item>\r\n          \r\n            <Image onClick={this.onLinkClick} name=\"/#\" size=\"small\" src={Logo}>\r\n              \r\n            </Image>\r\n            \r\n            \r\n          </Menu.Item>\r\n          <Menu.Menu position=\"right\">\r\n            <Menu.Item>\r\n               <Image onClick={this.navbarOn} style={{\"width\":\"38px\", \"height\":\"29px\"}} size=\"tiny\" src={Burger}/>\r\n            </Menu.Item>\r\n          </Menu.Menu>\r\n        </Menu>\r\n\r\n        <Menu vertical inverted className=\"menu-item-group\">\r\n          <Menu.Item className={`mobile-menu-item ${menuOpen}`} href=\"#/data-labeling\" >\r\n           {spanish? \"Etiquetado de Datos\":\"Data Labeling\"} \r\n          </Menu.Item>\r\n          <Menu.Item className={`mobile-menu-item ${menuOpen}`} href=\"#/ai-consulting\" >\r\n            {spanish? \"Consultoría en AI\":\"AI Consulting\"}\r\n          </Menu.Item>\r\n          <Menu.Item className={`mobile-menu-item ${menuOpen}`} href=\"#/pavements-analysis\" >\r\n            {spanish?\"Análisis de Daños en Pavimentos\":\"Pavement Damage Analysis\"} \r\n          </Menu.Item>\r\n          <Menu.Item className={`mobile-menu-item ${menuOpen}`}>\r\n          <Link to=\"/#contact-us\">\r\n            {spanish? \"Contáctenos\":\"Contact Us\"} \r\n          </Link>\r\n            \r\n          </Menu.Item>\r\n        </Menu>\r\n\r\n        \r\n         \r\n      </Segment>\r\n       </div>\r\n        </Fragment>\r\n        \r\n          : null\r\n       }\r\n       </div>\r\n       \r\n       \r\n        <Segment className=\"App-nav\" inverted style={{margin:\"0\",position:\"absolute\",\"width\":\"100%\",\"zIndex\":\"100\"}}>\r\n        <Menu inverted secondary>\r\n          <Menu.Item>\r\n          <Link to=\"/#\" target=\"_self\">\r\n            <Image size=\"small\" alt=\"engin.ai logo\" src={Logo}>\r\n              \r\n            </Image>\r\n          </Link>\r\n            \r\n            \r\n          </Menu.Item>\r\n          <Menu.Menu position=\"right\">\r\n            <Menu.Item>\r\n               <Image onClick={this.navbarOn} style={{\"width\":\"38px\", \"height\":\"29px\"}} size=\"tiny\" src={Burger}/>\r\n            </Menu.Item>\r\n          </Menu.Menu>\r\n        </Menu>\r\n        \r\n       \r\n      </Segment>\r\n      \r\n\r\n       </Responsive>\r\n      </Fragment>\r\n       \r\n      \r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Navbar);","import React from 'react';\r\nimport '../App.css';\r\n\r\nconst DiagonalSpacer = (props)=>{\r\n\tconst tilt = props.tilt || \"tilt-down\";\r\n\tconst bColor = props.background || \"#ffffff\";\r\n\tconst tiltClass =  `extra-border-inner-${tilt}`;\r\n\treturn(\r\n\t<div className=\"border-diagonal\">\r\n\t\t<div className=\"extra-border-outer\">\r\n\t\t\t<div className={tiltClass} style={{\r\n\t\t\t\t\"backgroundColor\":`${bColor}`\r\n\t\t\t}}>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>);\r\n}\r\nexport default DiagonalSpacer;","import React from \"react\";\r\nimport {Form, Button} from 'semantic-ui-react';\r\nimport '../App.css';\r\n\r\nclass FormSpreeForm extends React.Component {\r\nconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {};\r\n    \r\n\t}\r\n  render() {\r\n    return (\r\n      \r\n        <Form style={{\"display\":\"inline-block\"}} size=\"huge\" action=\"https://formspree.io/engin.ai.solutions@gmail.com\" method=\"POST\">\r\n        \t<Form.Group  widths='equal'>\r\n\t        \t<Form.Field required>\r\n            <label htmlFor=\"email\" style={{display:\"none\"}}>Email</label>\r\n\t        \t\t<Form.Input required id=\"email\" name=\"name\" type=\"email\" placeholder='Email*' />\r\n\t        \t</Form.Field>\r\n        \t\t\r\n      \t\t\t<label htmlFor=\"company_name\" style={{display:\"none\"}}>Company Name</label>\r\n      \t\t\t<Form.Input name=\"name\" id=\"company_name\"  placeholder='Company Name' />\r\n        \t</Form.Group>\r\n        \t<Form.Field required>\r\n              <label htmlFor=\"comments\"  style={{display:\"none\"}}>Comments</label>\r\n\t        \t\t<Form.TextArea rows={10} id=\"comments\" required name=\"name\" placeholder='Comment*' />\r\n\t        \t</Form.Field>\r\n        \t<Button size=\"huge\" type=\"submit\" className=\"CTA-2\">Contact Us</Button>\r\n        </Form>\r\n     \r\n    );\r\n  }\r\n}\r\n\r\nexport default FormSpreeForm;","import React, {Fragment} from 'react';\r\nimport { Segment, Button, Icon, Grid, Container, Divider, Image } from 'semantic-ui-react';\r\nimport './App.css';\r\nimport DiagonalSpacer from \"./components/DiagonalSpacer\";\r\nimport CloudComputing from \"./images/cloud-computing-01-01.png\";\r\nimport AiProcess from \"./images/ai-process-01-01.png\";\r\nimport ReportVector from \"./images/report-vector-01-01.png\";\r\nimport ConsultingImg from \"./images/Creative_process_SVG.svg\";\r\nimport PavementSampleWithout from \"./images/pavement-without-ai.jpg\";\r\nimport PavementSampleWith from \"./images/pavement-with-ai.jpg\";\r\nimport DataAnalysis from \"./images/Data_analysis_SVG.svg\";\r\nimport Analytics from \"./images/Analytics_SVG.svg\";\r\nimport City from \"./images/City_SVG.svg\";\r\n\r\nimport BeforeAfterSlider from 'react-before-after-slider'\r\nimport FormSpreeForm from './containers/FormSpreeForm';\r\nimport { HashLink as Link } from 'react-router-hash-link';\r\nimport {Helmet} from \"react-helmet\";\r\n\r\nconst Homepage = (props)=>{\r\n\tconst browserLang = props.browserLang;\r\n\tconst spanish = browserLang.indexOf(\"es\") > -1;\r\n\treturn (\r\n\t\t<Fragment>\r\n    <Helmet>\r\n      <title>Engin.ai - AI Solutions for Engineers | AI Consulting, data labeling, damage analysis in pavements</title>\r\n      <meta name=\"description\" content=\"At Engin.AI we create custom AI solutions for engineering companies . We offer data labeling services, AI consulting, and pavement analysis with computer vision\" />\r\n      <meta property=\"og:title\" content=\"Engin.AI - AI Solutions for Engineers | Your AI Strategic Partner\"/>\r\n      <meta property=\"og:type\" content=\"website\"/>\r\n      <meta property=\"og:url\" content=\"https://www.engin.ai\"/>\r\n      <meta property=\"og:description\" content=\"At Engin.AI we create custom AI solutions for engineering companies . We offer data labeling services, AI consulting, and pavement analysis with computer vision\"/>\r\n      <meta name=\"keywords\" content=\"engin ai, enginai, engin.ai, ai for engineers, ai consulting,  data labeling services, AI solutions, computer vision, damage analysis in pavements\"/>\r\n      <meta name=\"robots\" content=\"index, follow\"/>\r\n      <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>\r\n      <meta name=\"language\" content=\"English\"/>\r\n      <meta name=\"author\" content=\"Javier Urbina\"/>\r\n      <meta property=\"og:image\" content=\"%PUBLIC_URL%/full-color-logo-only-01-01.png\" />\r\n    </Helmet>\r\n\t\t\t<header className=\"App-header\">\r\n        \r\n\t\t<Segment basic style={{width:\"70%\",\"zIndex\":\"10\"}}>\r\n\t\t\t<h1 style={{\"textTransform\": \"uppercase\"}}>\r\n\t\t\t{spanish ? (\r\n\t\t\t\t\"Empoderamos su negocio con inteligencia artificial\"\r\n\t\t\t\t):\r\n\t\t\t\t\"Empowering your business with artificial intelligence\"}\r\n\t\t\t\r\n\t\t\t</h1>\r\n\t\t\t<br/>\r\n\t\t\t<br/>\r\n\t\t\t<h2>{spanish ? \r\n\t\t\t\t\"Haga parte de la 4ta revolución industrial con Engin.ai, su aliado estratégico\" : \r\n\t\t\t\t\"Enter the 4th industrial revolution with Engin.ai, your strategic partner\"}</h2>\r\n\t\t\t<br/>\r\n\t\t\t<Link to=\"/#contact-us\">\r\n\t\t\t\t<Button className=\"mainCTABtn\" inverted size=\"huge\" syle={{\"width\":\"50%\"}} >\r\n\t\t\t\t{spanish?\r\n\t\t\t\t\t<span className=\"buttonText\">Contáctenos</span> \r\n\t\t\t\t\t : \r\n\t\t\t\t\t<span>Contact Us</span>}\r\n\t\t\t\t<span className =\"iconContainer\" style={{\"display\":\"inline-block\", \"width\":\"10px\"}}>\r\n\t\t\t\t\t<Icon name=\"chevron right\">\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</Icon>\r\n\t\t\t\t</span>\r\n\t\t\t</Button>\r\n\r\n\t\t\t</Link>\r\n\t\t\t\r\n\t\t\t\t\r\n\t\t</Segment>\r\n\r\n      </header>\r\n      <DiagonalSpacer tilt=\"tilt-down\"></DiagonalSpacer>\r\n      <section>\r\n      \r\n        <Container>\r\n          <h1>{spanish? \"Lo que ofrecemos\":\"What we offer\"}</h1>  \r\n          <Grid centered stackable columns={3} divided>\r\n            <Grid.Column style={{\"zIndex\":\"3\"}}>\r\n              <Segment basic>\r\n                <Grid container centered>\r\n                  <Grid.Row>\r\n                    <Image  alt=\"people around a table analyzing data\" className=\"custom-icon\" size=\"small\" src={DataAnalysis}></Image>\r\n                  </Grid.Row>\r\n                  <Grid.Row>\r\n                    <h2>{spanish? \"Etiquetado de datos\":\"Data Labeling\"}</h2>\r\n                  </Grid.Row>\r\n                  <Grid.Row>\r\n                    <Segment compact basic size=\"large\" style={{\"padding\":\"0\"}}>\r\n                      {spanish? \"Los algoritmos de aprendizaje sólo serán tan buenos como los datos usados para entrenarlos. Nosotros le ayudamos con el proceso de etiquetado para que usted sólo se preocupe de entrenar sus modelos.\":\r\n                      \"A learning model will only be as good as the data used to train it. Our expert team will help you label your data so you only need to worry about training and using your model.\"}\r\n                    </Segment>\r\n\r\n                    \r\n                  </Grid.Row>\r\n                  <Grid.Row>\r\n                  \t<Button href=\"/#data-labeling\" color=\"green\">{spanish?\"Aprender Más\":\"Learn More\"}</Button>\r\n                  </Grid.Row>\r\n                </Grid>\r\n              </Segment>\r\n\r\n            </Grid.Column>\r\n            \r\n            <Grid.Column style={{\"zIndex\":\"3\"}}>\r\n              <Segment basic>\r\n                 <Grid container centered>\r\n                  <Grid.Row>\r\n                    <Image alt=\"buildings in a city\" className=\"custom-icon\" size=\"small\" src={City}></Image>\r\n                  </Grid.Row>\r\n                  <Grid.Row>\r\n                    <h2>{spanish? \"Análisis de daño de pavimentos\":\"Damage Analysis in Pavements\"}</h2>\r\n                  </Grid.Row>\r\n                  <Grid.Row>\r\n                    <Segment compact basic size=\"large\" style={{\"padding\":\"0\"}}>\r\n                      {spanish? \"¿Tiene fotos de pavimentos para analizar? Con nuestros algoritmos de visión computacional, nosotros podemos analizarlos con gran precisión y en tiempo récord\":\r\n                      \"Do you have photos pavements to analyze? With our computer vision algorithms, we can analyze them with great accuracy and in a record time\"}\r\n                    </Segment>\r\n                    \r\n                  </Grid.Row>\r\n                \t<Grid.Row>\r\n                  \t<Button href=\"/#pavements-analysis\" color=\"green\">{spanish?\"Aprender Más\":\"Learn More\"}</Button>\r\n                  </Grid.Row>\r\n                </Grid>\r\n              </Segment>\r\n            </Grid.Column>\r\n\r\n            <Grid.Column style={{\"zIndex\":\"3\"}}>\r\n              <Segment basic>\r\n                <Grid container centered>\r\n                  <Grid.Row>\r\n                    <Image alt=\"people around a monitor, analyzing its content\" className=\"custom-icon\" size=\"small\" src={Analytics}></Image>\r\n                  </Grid.Row>\r\n                  <Grid.Row>\r\n                    <h2>{spanish? \"Consultoría en AI\":\"AI Consulting\"}</h2>\r\n                  </Grid.Row>\r\n                  <Grid.Row>\r\n                    <Segment compact basic size=\"large\" style={{\"padding\":\"0\"}}>\r\n                      {spanish? \"¿Quisiera potenciar su empresa con soluciones personalizads? Nuestros consultores le pueden ayudar a crear soluciones para sus necesidades operacionales y de negocios.\":\r\n                      \"Would you like to find custom AI solutions for your company? Our AI consultants will work with you to create taylor-made solutions to your business and operational needs.\"}\r\n                    </Segment>\r\n\r\n                    \r\n                  </Grid.Row>\r\n                  <Grid.Row>\r\n                  \t<Button href=\"/#ai-consulting\" color=\"green\">{spanish?\"Aprender Más\":\"Learn More\"}</Button>\r\n                  </Grid.Row>\r\n                </Grid>\r\n              </Segment>\r\n\r\n            </Grid.Column>\r\n            <Divider></Divider>\r\n            <Divider></Divider>\r\n          </Grid>\r\n        </Container>\r\n       \r\n      </section>\r\n       <DiagonalSpacer background=\"whitesmoke\" tilt=\"tilt-up\"></DiagonalSpacer>\r\n      <section>\r\n        <Grid container stackable columns={2} verticalAlign='middle'>\r\n          <Grid.Column style={{\"zIndex\":\"3\"}}>\r\n            <BeforeAfterSlider \r\n              before={PavementSampleWith}\r\n            after={PavementSampleWithout}\r\n            width={500}\r\n            height={250}\r\n            defaultProgress={0.5}\r\n            >\r\n                \r\n              </BeforeAfterSlider>\r\n          </Grid.Column>\r\n          <Grid.Column style={{\"zIndex\":\"3\"}}>\r\n              <h1>{spanish? \"El Programa en Acción\":\"Our Software in Action\"}</h1>\r\n              <Segment basic size=\"massive\" style={{\"lineHeight\":\"1.5\"}}>\r\n                {spanish? \"Usamos algoritmos de visión computacional para analizar y clasificar daños en diversos pavimentos.\":\r\n                \"We use computer vision algorithms to analyze and classify damages in different pavements.\"}\r\n              </Segment>\r\n              <Button className=\"CTA-2\" size=\"huge\" href=\"/#/pavements-analysis\">\r\n                {spanish? \"Aprender más\": \"Learn more\"}\r\n              </Button>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </section>\r\n      <DiagonalSpacer background=\"white\" tilt=\"tilt-up\"></DiagonalSpacer>\r\n      <section className=\"purpleBack\" >\r\n        <Grid container stackable columns={2} verticalAlign='middle'>\r\n          \r\n          <Grid.Column style={{\"zIndex\":\"3\"}}>\r\n              <h1>{spanish? \"Por qué escoger a Engin.ai\":\"Why Choose Engin.ai\"}</h1>\r\n              <Segment basic size=\"massive\" style={{\"lineHeight\":\"1.5\"}}>\r\n                {spanish? \"Tenemos un equipo de profesionales cualificados en diferentes áreas de conocimientos. Esto nos permite trabajar con clientes en diversas industrias, y facilita el desarrollo de soluciones innovadoras para nuestros clientes.\"\r\n                :\r\n                \"We have a qualified team of professionals in diverse areas. This allows us to work with our clients across different industries and enables us to create innovative enterprise solutions for our clients.\"}\r\n              </Segment>\r\n          </Grid.Column>\r\n          <Grid.Column style={{\"zIndex\":\"3\"}}>\r\n         \r\n            <Segment basic>\r\n             <Image alt=\"people around a table with a light bulb in the middle\" src={ConsultingImg}></Image>\r\n            </Segment>\r\n  \r\n          </Grid.Column>\r\n        </Grid>\r\n      </section>\r\n      <DiagonalSpacer background=\"#5a72ff\" tilt=\"tilt-up\"></DiagonalSpacer>\r\n       <section style={{\"background\":\"#5a72ff\"}}>\r\n      \r\n        <Container>\r\n          <h1 style={{\"color\":\"white\"}}>{spanish? \"Cómo Funciona\":\"How it works\"}</h1>  \r\n          <Grid centered stackable columns={3}>\r\n            <Grid.Column style={{\"zIndex\":\"3\"}}>\r\n              <Segment>\r\n                <Grid container centered>\r\n                  <Grid.Row>\r\n                    <Image alt=\"a cloud with a database icon\" className=\"custom-icon\" size=\"tiny\" src={CloudComputing}></Image>\r\n                  </Grid.Row>\r\n                  <Grid.Row>\r\n                    <h2>{spanish? \"Envío\":\"Upload\"}</h2>\r\n                  </Grid.Row>\r\n                  <Grid.Row>\r\n                    <Segment compact basic size=\"large\" style={{\"padding\":\"0\"}}>\r\n                      {spanish? \"Envíanos de forma segura los datos que necesitas analizar.\":\r\n                      \"Send us the data that you need to analyze.\"}\r\n                    </Segment>\r\n                  </Grid.Row>\r\n                </Grid>\r\n              </Segment>\r\n            </Grid.Column>\r\n            <Grid.Column style={{\"zIndex\":\"3\"}}>\r\n              <Segment>\r\n                 <Grid container centered>\r\n                  <Grid.Row>\r\n                    <Image alt=\"a brain merged with a gear\" className=\"custom-icon\" size=\"tiny\" src={AiProcess}></Image>\r\n                  </Grid.Row>\r\n                  <Grid.Row>\r\n                    <h2>{spanish? \"Análisis\":\"Analyze\"}</h2>\r\n                  </Grid.Row>\r\n                  <Grid.Row>\r\n                    <Segment compact basic size=\"large\" style={{\"padding\":\"0\"}}>\r\n                      {spanish? \"Nosotros analizamos los datos con nuestros algoritmos de visión computacional.\":\r\n                      \"We analyze the data using our computer vision algorithms.\"}\r\n                    </Segment>\r\n                  </Grid.Row>\r\n                </Grid>\r\n              </Segment>\r\n            </Grid.Column>\r\n            <Grid.Column style={{\"zIndex\":\"3\"}}>\r\n              <Segment>\r\n                 <Grid container centered>\r\n                  <Grid.Row>\r\n                    <Image alt=\"icon with a report and a checkmark\" className=\"custom-icon\" size=\"tiny\" src={ReportVector}></Image>\r\n                  </Grid.Row>\r\n                  <Grid.Row>\r\n                    <h2>{spanish? \"Reporte\":\"Report\"}</h2>\r\n                  </Grid.Row>\r\n                  <Grid.Row>\r\n                    <Segment compact basic size=\"large\" style={{\"padding\":\"0\"}}>\r\n                      {spanish? \"Recibe un reporte con el insight que necesitas para tomar decisiones informadas.\":\r\n                      \"Receive a report with the insight that you need to make informed decisions.\"}\r\n                    </Segment>\r\n                  </Grid.Row>\r\n                </Grid>\r\n              </Segment>\r\n            </Grid.Column>\r\n          </Grid>\r\n        </Container>\r\n       \r\n      </section>\r\n      <DiagonalSpacer background=\"white\" tilt=\"tilt-down\"></DiagonalSpacer>\r\n      <section className=\"cta-section\" id=\"contact-us\">\r\n      <Grid.Row centered>\r\n        <h1>{spanish? \"Entra a la era AI con Engin.ai\": \"Enter the AI era with Engin.ai\"}</h1>\r\n      </Grid.Row>\r\n      <Grid.Row centered>\r\n        <p>{spanish? \"Permítanos ayudarle a automatizar tareas para que usted pueda enfocarse en lo que sabe hacer mejor.\": \r\n        \"We can help you automate tasks so you can focus on doing what you do best.\"}</p>\r\n      </Grid.Row>\r\n      <Divider></Divider>\r\n      <Grid.Row centered>\r\n      <Container textAlign=\"center\">\r\n      \t\r\n      \t\t<FormSpreeForm style={{\"display\":\"inline-block\"}}></FormSpreeForm>\r\n      \t\r\n      </Container>\r\n      \t\r\n      \t\t\r\n            \t\r\n      </Grid.Row>\r\n       \r\n      </section>\r\n\t\t</Fragment>\r\n\t\t\r\n\t\t);\r\n\r\n}\r\n\r\n\r\nexport default Homepage;","import React  from 'react';\r\nimport { Segment, Button, Icon, Grid, Form, TextArea, Input } from 'semantic-ui-react';\r\nimport '../App.css';\r\nimport { HashLink as Link } from 'react-router-hash-link';\r\nimport {Helmet} from \"react-helmet\";\r\n\r\nconst DataLabeling = (props)=>{\r\n\tconst browserLang = props.browserLang;\r\n\tconst spanish = browserLang.indexOf(\"es\") > -1;\r\n\tconst imgUrl = \"images/background-image-hero.jpg\";\r\n\tlet backgroundImg = `linear-gradient(45deg, rgba(0, 26, 255, 0.7) 1%, rgb(99, 97, 238) 30%, rgb(119, 99, 213) 69%, rgb(161, 103, 161) 100%),url(${imgUrl})`;\r\n\treturn(\r\n\t\t\r\n\t\t<header className=\"App-hero\" style={{\r\n\t\t\t\"minHeight\":\"100vh\",\r\n\t\t\t\"backgroundImage\":backgroundImg,\r\n\t\t\t\"color\":\"white\"\r\n\t\t}}>\r\n        <Helmet>\r\n\t\t\t<title>\r\n\t\t\t\tEngin.AI - Data Labeling Services\r\n\t\t\t</title>\r\n\t\t\t<meta name=\"description\" content=\"A learning model will only be as good as the data used to train it. Our expert team will help you label your data so you only need to worry about training and using your models\" />\r\n\t\t    <meta property=\"og:title\" content=\"Engin.AI - Data Labeling Services For AI\"/>\r\n\t\t    <meta property=\"og:type\" content=\"website\"/>\r\n\t\t    <meta property=\"og:url\" content=\"https://www.engin.ai\"/>\r\n\t\t    <meta property=\"og:description\" content=\"A learning model will only be as good as the data used to train it. Our expert team will help you label your data so you only need to worry about training and using your models\"/>\r\n\t\t    <meta name=\"keywords\" content=\"engin ai, enginai, engin.ai, data labeling services, AI solutions, computer vision, damage analysis in pavements\"/>\r\n\t\t    <meta name=\"robots\" content=\"index, follow\"/>\r\n\t\t    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>\r\n\t\t    <meta name=\"language\" content=\"English\"/>\r\n\t\t    <meta name=\"author\" content=\"Javier Urbina\"/>\r\n\t\t    <meta property=\"og:image\" content=\"%PUBLIC_URL%/full-color-logo-only-01-01.png\" />\r\n\t\t</Helmet>\r\n\t\t<Segment basic style={{width:\"70%\",\"zIndex\":\"10\"}} className=\"cta-hero-section\">\r\n\t\t<Grid stackable>\r\n\t\t\t<Grid.Row columns={2}>\r\n\t\t\t\t<Grid.Column style={{\"textAlign\":\"left\"}}>\r\n\t\t\t\t\t<h1 style={{\"textTransform\": \"uppercase\"}}>\r\n\t\t\t{spanish ? (\r\n\t\t\t\t\"Etiquetado de Datos\"\r\n\t\t\t\t):\r\n\t\t\t\t\"Data labeling\"}\r\n\t\t\t\r\n\t\t\t</h1>\r\n\t\t\t<br/>\r\n\t\t\t<br/>\r\n\t\t\t<h2 style={{\"lineHeight\":\"1.5\"}}>{spanish ? \r\n\t\t\t\t\"Los algoritmos de aprendizaje sólo serán tan buenos como los datos usados para entrenarlos. Nosotros le ayudamos con el proceso de etiquetado para que usted sólo se preocupe de entrenar sus modelos.\" : \r\n\t\t\t\t\"A learning model will only be as good as the data used to train it. Our expert team will help you label your data so you only need to worry about training and using your models.\"}</h2>\r\n\t\t\t<br/>\r\n\t\t\r\n\t\t\t\r\n\t\t\t\t</Grid.Column>\r\n\t\t\t\t<Grid.Column>\r\n\t\t\t\t\t<Segment>\r\n\t\t\t\t\t\t<Form action=\"https://formspree.io/engin.ai.solutions@gmail.com\" method=\"POST\" style={{\"color\":\"black\"}}>\r\n\t\t\t\t\t\t\t<h2>\r\n\t\t\t\t\t\t\t\t{spanish? \"Contáctenos para Hacer un Demo\"\r\n\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\"Request a Demo\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t\t<Segment basic style={{\"textAlign\":\"left\"}}>\r\n\t\t\t\t\t\t\t<Form.Field>\r\n\t\t\t\t\t\t\t\t<label htmlFor=\"user_name\">Name</label>\t\r\n\t\t\t\t\t\t\t\t<Input name=\"name\" id=\"user_name\" placeholder=\"John Doe\">\r\n\t\t\t\t\t\t\t\t</Input>\r\n\t\t\t\t\t\t\t</Form.Field>\r\n\t\t\t\t\t\t\t<Form.Field required>\r\n\t\t\t\t\t\t\t\t<label htmlFor=\"email\">Email</label>\t\r\n\t\t\t\t\t\t\t\t<Input required name=\"name\" id=\"email\" placeholder=\"jdoe@example.com\">\r\n\t\t\t\t\t\t\t\t</Input>\r\n\t\t\t\t\t\t\t</Form.Field>\r\n\t\t\t\t\t\t\t<Form.Field>\r\n\t\t\t\t\t\t\t\t<label htmlFor=\"company\">Company</label>\t\r\n\t\t\t\t\t\t\t\t<Input name=\"name\" id=\"company\" placeholder=\"My Business\">\r\n\t\t\t\t\t\t\t\t</Input>\r\n\t\t\t\t\t\t\t</Form.Field>\r\n\t\t\t\t\t\t\t<Form.Field>\r\n\t\t\t\t\t\t\t\t<label htmlFor=\"comment\">Comment</label>\t\r\n\t\t\t\t\t\t\t\t<TextArea name=\"name\" id=\"comment\">\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</TextArea>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</Form.Field>\r\n\t\t\t\t\t\t\t</Segment>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<Button type=\"submit\" color=\"red\" size=\"huge\" syle={{\"width\":\"50%\"}} >\r\n\t\t\t\t\t\t\t\t{spanish?\r\n\t\t\t\t\t\t\t\t\t<span className=\"buttonText\">Contáctenos</span> \r\n\t\t\t\t\t\t\t\t\t : \r\n\t\t\t\t\t\t\t\t\t<span>Contact Us</span>}\r\n\t\t\t\t\t\t\t\t<span className =\"iconContainer\" style={{\"display\":\"inline-block\", \"width\":\"10px\"}}>\r\n\t\t\t\t\t\t\t\t\t<Icon name=\"chevron right\">\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</Icon>\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</Segment>\r\n\t\t\t\t</Grid.Column>\r\n\t\t\t</Grid.Row>\r\n\t\t</Grid>\r\n\t\t\t\r\n\t\t\t\t\t<Link to=\"/#contact-us\">\r\n\t\t\t\t\r\n\r\n\t\t\t</Link>\r\n\t\t</Segment>\r\n\r\n      </header>\r\n\t\t);\t\r\n} \r\n\r\nexport default DataLabeling;","import React from 'react';\r\nimport { Segment, Button, Icon, Grid, Form, TextArea, Input } from 'semantic-ui-react';\r\nimport '../App.css';import { HashLink as Link } from 'react-router-hash-link';\r\nimport {Helmet} from \"react-helmet\";\r\n\r\nconst DamageAnalysis = (props)=>{\r\n\tconst browserLang = props.browserLang;\r\n\tconst spanish = browserLang.indexOf(\"es\") > -1;\r\n\tconst imgUrl = \"images/background-image-hero.jpg\";\r\n\tlet backgroundImg = `linear-gradient(45deg, rgb(229, 44, 78) 1%, rgb(233, 74, 99) 30%, rgb(174, 82, 157) 69%, rgb(154, 85, 177) 100%),url(${imgUrl})`;\r\n\treturn(\r\n\t\t<header className=\"App-hero\" style={{\r\n\t\t\t\"minHeight\":\"100vh\",\r\n\t\t\t\"backgroundImage\":backgroundImg,\r\n\t\t\t\"color\":\"white\"\r\n\t\t}}>\r\n         <Helmet>\r\n\t\t\t<title>\r\n\t\t\t\tEngin.AI - Pavement Damage Analysis |Pavement Inspection and Auditing\r\n\t\t\t</title>\r\n\t\t\t<meta name=\"description\" content=\"Save money and increase accuracy of your pavement inspections using our AI -powered software to detect damages in pavement and its different categories.\" />\r\n\t\t    <meta property=\"og:title\" content=\"Engin.AI - AI Consulting | Data Strategy | AI Strategy\"/>\r\n\t\t    <meta property=\"og:type\" content=\"website\"/>\r\n\t\t    <meta property=\"og:url\" content=\"https://www.engin.ai\"/>\r\n\t\t    <meta property=\"og:description\" content=\"Save money and increase accuracy of your pavement inspections using our AI -powered software to detect damages in pavement and its different categories.\"/>\r\n\t\t    <meta name=\"keywords\" content=\"engin ai, enginai, engin.ai, AI for civil engineering, computer vision, pavement inspection, pavement inspection with ai, pavement inspection machine learning\"/>\r\n\t\t    <meta name=\"robots\" content=\"index, follow\"/>\r\n\t\t    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>\r\n\t\t    <meta name=\"language\" content=\"English\"/>\r\n\t\t    <meta name=\"author\" content=\"Javier Urbina\"/>\r\n\t\t    <meta property=\"og:image\" content=\"%PUBLIC_URL%/full-color-logo-only-01-01.png\" />\r\n\t\t</Helmet>\r\n\t\t<Segment basic style={{width:\"70%\",\"zIndex\":\"10\"}} className=\"cta-hero-section\">\r\n\t\t<Grid stackable>\r\n\t\t\t<Grid.Row columns={2}>\r\n\t\t\t\t<Grid.Column style={{\"textAlign\":\"left\"}}>\r\n\t\t\t\t\t<h1 style={{\"textTransform\": \"uppercase\"}}>\r\n\t\t\t{spanish ? (\r\n\t\t\t\t\"Análisis de Daños en Pavimentos\"\r\n\t\t\t\t):\r\n\t\t\t\t\"Analysis of Pavement Damage\"}\r\n\t\t\t\r\n\t\t\t</h1>\r\n\t\t\t<br/>\r\n\t\t\t<br/>\r\n\t\t\t<h2 style={{\"lineHeight\":\"1.5\"}}>{spanish ? \r\n\t\t\t\t\"¿Tiene fotos de pavimentos para analizar? Con nuestros algoritmos de visión computacional, nosotros podemos analizarlos con gran precisión y a un tiempo récord en tiempo récord.\" : \r\n\t\t\t\t\"Do you have photos pavements to analyze? With our computer vision algorithms, we can analyze them with great accuracy and in a record time.\"}</h2>\r\n\t\t\t<br/>\r\n\t\t\r\n\t\t\t\r\n\t\t\t\t</Grid.Column>\r\n\t\t\t\t<Grid.Column>\r\n\t\t\t\t\t<Segment>\r\n\t\t\t\t\t\t<Form action=\"https://formspree.io/engin.ai.solutions@gmail.com\" method=\"POST\" style={{\"color\":\"black\"}}>\r\n\t\t\t\t\t\t\t<h2>\r\n\t\t\t\t\t\t\t\t{spanish? \"Contáctenos para Hacer un Demo\"\r\n\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\"Request a Demo\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t\t<Segment basic style={{\"textAlign\":\"left\"}}>\r\n\t\t\t\t\t\t\t<Form.Field>\r\n\t\t\t\t\t\t\t\t<label htmlFor=\"user_name\">Name</label>\t\r\n\t\t\t\t\t\t\t\t<Input name=\"name\" id=\"user_name\" placeholder=\"John Doe\">\r\n\t\t\t\t\t\t\t\t</Input>\r\n\t\t\t\t\t\t\t</Form.Field>\r\n\t\t\t\t\t\t\t<Form.Field>\r\n\t\t\t\t\t\t\t\t<label htmlFor=\"email\">Email</label>\t\r\n\t\t\t\t\t\t\t\t<Input required name=\"name\" id=\"email\" placeholder=\"jdoe@example.com\">\r\n\t\t\t\t\t\t\t\t</Input>\r\n\t\t\t\t\t\t\t</Form.Field>\r\n\t\t\t\t\t\t\t<Form.Field>\r\n\t\t\t\t\t\t\t\t<label htmlFor=\"company\">Company</label>\t\r\n\t\t\t\t\t\t\t\t<Input name=\"name\" id=\"company\" placeholder=\"My Business\">\r\n\t\t\t\t\t\t\t\t</Input>\r\n\t\t\t\t\t\t\t</Form.Field>\r\n\t\t\t\t\t\t\t<Form.Field>\r\n\t\t\t\t\t\t\t\t<label htmlFor=\"comment\">Comment</label>\t\r\n\t\t\t\t\t\t\t\t<TextArea name=\"name\" id=\"comment\">\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</TextArea>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</Form.Field>\r\n\t\t\t\t\t\t\t</Segment>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<Button type=\"submit\" color=\"red\" size=\"huge\" syle={{\"width\":\"50%\"}} >\r\n\t\t\t\t\t\t\t\t{spanish?\r\n\t\t\t\t\t\t\t\t\t<span className=\"buttonText\">Contáctenos</span> \r\n\t\t\t\t\t\t\t\t\t : \r\n\t\t\t\t\t\t\t\t\t<span>Contact Us</span>}\r\n\t\t\t\t\t\t\t\t<span className =\"iconContainer\" style={{\"display\":\"inline-block\", \"width\":\"10px\"}}>\r\n\t\t\t\t\t\t\t\t\t<Icon name=\"chevron right\">\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</Icon>\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</Segment>\r\n\t\t\t\t</Grid.Column>\r\n\t\t\t</Grid.Row>\r\n\t\t</Grid>\r\n\t\t\t\r\n\t\t\t\t\t<Link to=\"/#contact-us\">\r\n\t\t\t\t\r\n\r\n\t\t\t</Link>\r\n\t\t</Segment>\r\n\r\n      </header>\r\n\t\t);\t\r\n} \r\n\r\nexport default DamageAnalysis;","import React from 'react';\r\nimport { Segment, Button, Icon, Grid, Form, TextArea, Input } from 'semantic-ui-react';\r\nimport '../App.css';import { HashLink as Link } from 'react-router-hash-link';\r\nimport {Helmet} from \"react-helmet\";\r\n\r\nconst AiConsulting = (props)=>{\r\n\tconst browserLang = props.browserLang;\r\n\tconst spanish = browserLang.indexOf(\"es\") > -1;\r\n\tconst imgUrl = \"images/background-image-hero.jpg\";\r\n\tlet backgroundImg = `linear-gradient(45deg, rgb(108, 16, 204) 1%, rgb(126, 81, 177) 30%, rgb(162, 98, 153) 69%, rgba(220, 40, 55, 0.7) 100%),url(${imgUrl})`;\r\n\treturn(\r\n\t\t<header className=\"App-hero\" style={{\r\n\t\t\t\"minHeight\":\"100vh\",\r\n\t\t\t\"backgroundImage\":backgroundImg,\r\n\t\t\t\"color\":\"white\"\r\n\t\t}}>\r\n         <Helmet>\r\n\t\t\t<title>\r\n\t\t\t\tEngin.AI - AI Consulting Services\r\n\t\t\t</title>\r\n\t\t\t<meta name=\"description\" content=\"At Engin.AI we help clients at all levels of AI adoption. We provide consulting in data collection strategy, data curation, AI strategy, AI implementation and deployment\" />\r\n\t\t    <meta property=\"og:title\" content=\"Engin.AI - AI Consulting | Data Strategy | AI Strategy\"/>\r\n\t\t    <meta property=\"og:type\" content=\"website\"/>\r\n\t\t    <meta property=\"og:url\" content=\"https://www.engin.ai\"/>\r\n\t\t    <meta property=\"og:description\" content=\"At Engin.AI we help clients at all levels of AI adoption. We provide consulting in data collection strategy, data curation, AI strategy, AI implementation and deployment\"/>\r\n\t\t    <meta name=\"keywords\" content=\"engin ai, enginai, engin.ai, AI consulting services, AI solutions, computer vision, deep learning, data collection, data strategy, ai strategy, ai deployment\"/>\r\n\t\t    <meta name=\"robots\" content=\"index, follow\"/>\r\n\t\t    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>\r\n\t\t    <meta name=\"language\" content=\"English\"/>\r\n\t\t    <meta name=\"author\" content=\"Javier Urbina\"/>\r\n\t\t    <meta property=\"og:image\" content=\"%PUBLIC_URL%/full-color-logo-only-01-01.png\" />\r\n\t\t</Helmet>\r\n\t\t<Segment basic style={{width:\"70%\",\"zIndex\":\"10\"}} className=\"cta-hero-section\">\r\n\t\t<Grid stackable>\r\n\t\t\t<Grid.Row columns={2}>\r\n\t\t\t\t<Grid.Column style={{\"textAlign\":\"left\"}}>\r\n\t\t\t\t\t<h1 style={{\"textTransform\": \"uppercase\"}}>\r\n\t\t\t{spanish ? (\r\n\t\t\t\t\"Consultoría en AI\"\r\n\t\t\t\t):\r\n\t\t\t\t\"AI Consulting\"}\r\n\t\t\t\r\n\t\t\t</h1>\r\n\t\t\t<br/>\r\n\t\t\t<br/>\r\n\t\t\t<h2 style={{\"lineHeight\":\"1.5\"}}>{spanish ? \r\n\t\t\t\t\"¿Quisiera potenciar su empresa con soluciones personalizads? Nuestros consultores le pueden ayudar a crear soluciones para sus necesidades operacionales y de negocios.\" : \r\n\t\t\t\t\"Would you like to find custom AI solutions for your company? Our AI consultants will work with you to create taylor-made solutions to your business and operational needs.\"}</h2>\r\n\t\t\t<br/>\r\n\t\t\r\n\t\t\t\r\n\t\t\t\t</Grid.Column>\r\n\t\t\t\t<Grid.Column>\r\n\t\t\t\t\t<Segment>\r\n\t\t\t\t\t\t<Form style={{\"color\":\"black\"}} action=\"https://formspree.io/engin.ai.solutions@gmail.com\" method=\"POST\">\r\n\t\t\t\t\t\t\t<h2>\r\n\t\t\t\t\t\t\t\t{spanish? \"Solicite una Asesoría Inicial Gratuita\"\r\n\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\"Request a Free Initial Assessment\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t\t\t<Segment basic style={{\"textAlign\":\"left\"}}>\r\n\t\t\t\t\t\t\t<Form.Field>\r\n\t\t\t\t\t\t\t\t<label htmlFor=\"user_name\">Name</label>\t\r\n\t\t\t\t\t\t\t\t<Input name=\"name\" id=\"user_name\" placeholder=\"John Doe\">\r\n\t\t\t\t\t\t\t\t</Input>\r\n\t\t\t\t\t\t\t</Form.Field>\r\n\t\t\t\t\t\t\t<Form.Field>\r\n\t\t\t\t\t\t\t\t<label htmlFor=\"email\" >Email</label>\t\r\n\t\t\t\t\t\t\t\t<Input required name=\"name\" id=\"email\" placeholder=\"jdoe@example.com\">\r\n\t\t\t\t\t\t\t\t</Input>\r\n\t\t\t\t\t\t\t</Form.Field>\r\n\t\t\t\t\t\t\t<Form.Field>\r\n\t\t\t\t\t\t\t\t<label htmlFor=\"company\">Company</label>\t\r\n\t\t\t\t\t\t\t\t<Input name=\"name\" id=\"company\" placeholder=\"My Business\">\r\n\t\t\t\t\t\t\t\t</Input>\r\n\t\t\t\t\t\t\t</Form.Field>\r\n\t\t\t\t\t\t\t<Form.Field>\r\n\t\t\t\t\t\t\t\t<label htmlFor=\"comment\">Comment</label>\t\r\n\t\t\t\t\t\t\t\t<TextArea name=\"name\" id=\"comment\">\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</TextArea>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</Form.Field>\r\n\t\t\t\t\t\t\t</Segment>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<Button type=\"submit\" color=\"red\" size=\"huge\" syle={{\"width\":\"50%\"}} >\r\n\t\t\t\t\t\t\t\t{spanish?\r\n\t\t\t\t\t\t\t\t\t<span className=\"buttonText\">Contáctenos</span> \r\n\t\t\t\t\t\t\t\t\t : \r\n\t\t\t\t\t\t\t\t\t<span>Contact Us</span>}\r\n\t\t\t\t\t\t\t\t<span className =\"iconContainer\" style={{\"display\":\"inline-block\", \"width\":\"10px\"}}>\r\n\t\t\t\t\t\t\t\t\t<Icon name=\"chevron right\">\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</Icon>\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</Segment>\r\n\t\t\t\t</Grid.Column>\r\n\t\t\t</Grid.Row>\r\n\t\t</Grid>\r\n\t\t\t\r\n\t\t\t\t\t<Link to=\"/#contact-us\">\r\n\t\t\t\t\r\n\r\n\t\t\t</Link>\r\n\t\t</Segment>\r\n\r\n      </header>\r\n\t\t);\t\r\n} \r\n\r\nexport default AiConsulting;","import React, {Fragment} from \"react\";\r\nimport {Grid, Container, Button, Divider, Image, Segment} from 'semantic-ui-react';\r\nimport '../App.css';\r\nimport Dropzone from 'react-dropzone';\r\nimport axios from \"axios\";\r\n\r\nclass Demo extends React.Component {\r\nconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n      acceptedFiles:[],\r\n      images:[],\r\n      arrayBuffers:[],\r\n      loading:false,\r\n      detection:null,\r\n      type:null,\r\n      confidence:null,\r\n      length:null,\r\n      width:null,\r\n      imgSize:null\r\n    };\r\n    this.handleDrop = this.handleDrop.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n\t}\r\n\r\n  handleDrop(acceptedFiles){\r\n     this.setState({\r\n      acceptedFiles:acceptedFiles\r\n     });\r\n    \r\n  }\r\n\r\n  handleSubmit(evt){  \r\n    evt.preventDefault();\r\n    this.setState({\r\n      loading:true\r\n    });\r\n    \r\n    // var imagefile = this.state.arrayBuffers;\r\n    this.state.acceptedFiles.forEach((file)=>{\r\n      var formData = new FormData();\r\n    formData.append(\"image\", file);\r\n    axios.post(`${process.env.REACT_APP_PRODUCTION_SERVER_URL}/api/images/uploads`,formData,{\r\n      headers:{\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    }).then((result)=>{\r\n      console.log(result);\r\n        if(result.data.data.image && result.data.data.detection_img_url){\r\n          this.setState({\r\n            images:[...this.state.images, result.data.data.image],\r\n            detection:result.data.data.detection_img_url,\r\n            confidence:result.data.data.damage.confidence,\r\n            length:result.data.data.damage.length,\r\n            width:result.data.data.damage.name,\r\n            imgSize:result.data.data.imgsize\r\n          });\r\n        }\r\n        if(result.data.data.image){\r\n          this.setState({\r\n            images:[...this.state.images, result.data.data.image]\r\n          });\r\n        }\r\n      })\r\n      .catch((err)=>{\r\n        console.log(err);\r\n      }).finally(()=>{\r\n        this.setState({\r\n          loading:false\r\n        });\r\n      });\r\n    });\r\n\r\n\r\n  }\r\n\r\n  render() {\r\n    let backgroundImg = `linear-gradient(45deg, rgb(229, 44, 78) 1%, rgb(233, 74, 99) 30%, rgb(174, 82, 157) 69%, rgb(154, 85, 177) 100%)`;\r\n    const browserLang = this.props.browserLang || \"en\";\r\n    console.log(process.env.REACT_APP_PRODUCTION_SERVER_URL);\r\n    let fileNames = this.state.acceptedFiles.map((file)=>{\r\n      if(\"name\" in file){\r\n        return (<p>{file.name}</p>)\r\n      }else if(\"path\" in file){\r\n        return (<p>{file.path}</p>)\r\n      }else{\r\n        return (<p>{\"no-name\"}</p>)\r\n      }\r\n      \r\n    });\r\n    let images = this.state.images.map((imgUrl)=>{\r\n      return (<Image src={imgUrl} size=\"medium\"></Image>)\r\n    });\r\n    return (\r\n      <Fragment>\r\n        <header className=\"App-hero\" style={{\r\n          \"minHeight\":\"75px\",\r\n          \"backgroundImage\":backgroundImg,\r\n          \"color\":\"white\"\r\n        }}>\r\n        </header>\r\n        <Container style={{\"paddingTop\":\"16px\"}}>\r\n          <Grid>\r\n            <Grid.Row columns={2}>\r\n                <Grid.Column style={{\"textAlign\":\"left\"}}>\r\n                  <Grid.Row>\r\n                    <h1>{browserLang === \"en\" ? \"Select Photo\":\"Seleccionar Foto\"}</h1>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                      <Dropzone  onDrop={acceptedFiles => this.handleDrop(acceptedFiles)}>\r\n                      {({getRootProps, getInputProps}) => (\r\n                        <section>\r\n                          <div className=\"dropzone\" {...getRootProps()}>\r\n                            <input {...getInputProps()} />\r\n                            <p>{browserLang === \"en\" ? \"Drag 'n' drop some files here, or click to select files\":\"Arrastra los archivos aquí, o haz click para seleccionar archivo\"}</p>\r\n                          </div>\r\n                        </section>\r\n                      )}\r\n                </Dropzone>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                      <h1>{browserLang === \"en\" ? \"Selected Files\" : \"Archivos seleccionados\"}</h1>\r\n                    </Grid.Row>\r\n                     <Grid.Row>\r\n                      <Segment>\r\n                        {fileNames}  \r\n                      </Segment>\r\n                    </Grid.Row>\r\n                    <Divider></Divider>\r\n                    <Grid.Row>\r\n                      <Button loading={this.state.loading} color=\"red\" disabled={this.state.acceptedFiles.length < 1} onClick={this.handleSubmit} >\r\n                        {browserLang === \"en\" ? \"Submit\" : \"Enviar\"}\r\n                      </Button>\r\n                    </Grid.Row>\r\n                </Grid.Column> \r\n                <Grid.Column>\r\n                  {images}\r\n                </Grid.Column>  \r\n            </Grid.Row>\r\n          \r\n        </Grid>  \r\n        </Container>\r\n          \r\n      </Fragment>\r\n      \r\n     \r\n    );\r\n  }\r\n}\r\n\r\nexport default Demo;","import React, {Fragment} from \"react\";\r\nimport {Grid, Button, Divider, Segment, Checkbox, Dropdown,Table, Input, Icon, TextArea,Form} from 'semantic-ui-react';\r\nimport '../App.css';\r\nimport Dropzone from 'react-dropzone';\r\nimport csv from \"csv\";\r\nimport {Magnifier} from \"react-image-magnifiers\";\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nclass ImageVisualizer extends React.Component {\r\nconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n      acceptedFiles:[],\r\n      images:[],\r\n      arrayBuffers:[],\r\n      loading:false,\r\n      detection:null,\r\n      type:null,\r\n      confidence:null,\r\n      length:null,\r\n      width:null,\r\n      imgSize:null,\r\n      parsedCsvData:null,\r\n      withHeaders:true,\r\n      withImages:false,\r\n      headers:[],\r\n      imagesColumn:null,\r\n      secondImageColumn:null,\r\n      maxRowCount : 10,\r\n      startingRow:1,\r\n      selectedRow:[],\r\n      selectedRowIdx:0,\r\n      nameCol:0,\r\n      damageCol:1,\r\n      qaGenerated:[],\r\n      classificationGenerated:[],\r\n      feedbackGenerated:[],\r\n      usage:[\r\n        {value:\"qa\", text:\"Quality Assurance\"},\r\n        {value:\"quick-classification\", text:\"Quick Classification\"},\r\n        {value:\"visual\", text:\"Only Visualize\"},\r\n        {value:\"feedback\", text:\"Feedback\"}\r\n        ],\r\n      objective:\"visual\",\r\n      qaDamageDetectedCorrectly:true,\r\n      qaCorrectedDamage:\"none\",\r\n      classificationIsDamaged:false,\r\n      classificationDamageName:\"none\",\r\n      feedbackImageHasDamage:false,\r\n      feedbackDamageName1:\"none\",\r\n      feedbackDamageName2:\"none\",\r\n      feedbackDamageName3:\"none\",\r\n      feedbackDamage1Length:0,\r\n      feedbackDamage2Length:0,\r\n      feedbackDamage3Length:0,\r\n      feedbackDamage1Width:0,\r\n      feedbackDamage2Width:0,\r\n      feedbackDamage3Width:0,\r\n      feedbackComments:\"\",\r\n      disableAdd:false,\r\n      twoImages:false,\r\n      startingRowCustomize:1\r\n    };\r\n    this.handleDrop = this.handleDrop.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n\t}\r\n\r\n  handleDrop(acceptedFiles){\r\n     const reader = new FileReader();\r\n     let filesArray = [];\r\n     reader.onabort = () => console.log(\"file reading was aborted\");\r\n      reader.onerror = () => console.log(\"file reading failed\");\r\n      reader.onload = () => {\r\n        // Parse CSV file\r\n        csv.parse(reader.result, (err, data) => {\r\n          if(data && \"length\" in data && data.length){\r\n            let columnList = data[0].map((str,idx)=>{\r\n            if(this.state.withHeaders){\r\n              return str;\r\n            }else{\r\n              return idx;\r\n            }\r\n          });  \r\n          // console.log(\"Parsed CSV data: \", data);\r\n          this.setState({\r\n            parsedCsvData:this.state.withHeaders? data : [columnList,...data],\r\n            headers:columnList,\r\n            qaGenerated:[[...columnList,\"damage_detected_correctly\",\"corrected_damage\"],...this.state.qaGenerated],\r\n            classificationGenerated:[[...columnList,\"has_damage\",\"damage_type\"],...this.state.qaGenerated],\r\n            feedbackGenerated:[[...columnList,\"damage_1_type\",\"damage_1_length\",\"damage_1_width\",\"damage_2_type\",\"damage_2_length\",\"damage_2_width\",\"damage_3_type\",\"damage_3_length\",\"damage_3_width\",\"comments\"],...this.state.qaGenerated],\r\n          });\r\n          }\r\n        });\r\n      };\r\n\r\n      // read file contents\r\n      acceptedFiles.forEach(file => {\r\n        console.log(\"file\",file);\r\n        const parsedFile = reader.readAsBinaryString(file);\r\n        console.log(\"parsed file\",parsedFile);\r\n        filesArray.push(parsedFile);\r\n      });\r\n      console.log(filesArray);\r\n     this.setState({\r\n      acceptedFiles:acceptedFiles,\r\n      arrayBuffers:filesArray\r\n     });\r\n    \r\n  }\r\n\r\n  handleChange(evt, data){\r\n    this.setState({\r\n      [data.name] : data.value\r\n    });\r\n  }\r\n\r\n  handleSubmit(evt){  \r\n    evt.preventDefault();\r\n    this.setState({\r\n      loading:true\r\n    });\r\n    if(this.state.objective === \"qa\"){\r\n      let grade = this.state.qaDamageDetectedCorrectly ? this.state.qaDamageDetectedCorrectly : false;\r\n      let newDamage = this.state.qaCorrectedDamage;\r\n      let newRow = [...this.state.selectedRow, grade, newDamage];\r\n      let qaArr = [...this.state.qaGenerated,newRow];\r\n      this.setState({\r\n        qaGenerated:qaArr,\r\n        loading:false,\r\n        qaDamageDetectedCorrectly:true,\r\n        qaCorrectedDamage:\"\",\r\n        disableAdd:true\r\n      });\r\n    }else if(this.state.objective === \"quick-classification\"){\r\n      let foundDamage = this.state.classificationIsDamaged ? this.state.classificationIsDamaged : false;\r\n      let newDamage = foundDamage ? this.state.classificationDamageName : \"None\";\r\n      let newRow = [...this.state.selectedRow, foundDamage, newDamage];\r\n      let classificationGenerated = [...this.state.classificationGenerated, newRow];\r\n      this.setState({\r\n        classificationGenerated:classificationGenerated,\r\n        loading:false,\r\n        classificationIsDamaged:false,\r\n        disableAdd:true\r\n      });\r\n    }else if(this.state.objective === \"feedback\"){\r\n      let foundDamage = this.state.feedbackImageHasDamage ? this.state.feedbackImageHasDamage : false;\r\n      let newDamage1 = foundDamage ? this.state.feedbackDamageName1 : \"None\";\r\n      let newDamage1Length = foundDamage ? this.state.feedbackDamage1Length : 0;\r\n      let newDamage1Width = foundDamage ? this.state.feedbackDamage1Width : 0;\r\n      let newDamage2 = foundDamage ? this.state.feedbackDamageName2 : \"None\";\r\n      let newDamage2Length = foundDamage ? this.state.feedbackDamage2Length : 0;\r\n      let newDamage2Width = foundDamage ? this.state.feedbackDamage2Width : 0;\r\n      let newDamage3 = foundDamage ? this.state.feedbackDamageName3 : \"None\";\r\n      let newDamage3Length = foundDamage ? this.state.feedbackDamage3Length : 0;\r\n      let newDamage3Width = foundDamage ? this.state.feedbackDamage3Width : 0;\r\n      let comments = foundDamage ? this.state.feedbackComments : \"\";\r\n      let newRow = [...this.state.selectedRow, newDamage1,newDamage1Length, newDamage1Width, newDamage2, newDamage2Length,newDamage2Width, newDamage3, newDamage3Length, newDamage3Width, comments];\r\n      let feedbackGenerated = [...this.state.feedbackGenerated, newRow];\r\n      this.setState({\r\n        feedbackGenerated:feedbackGenerated,\r\n        loading:false,\r\n        feedbackImageHasDamage:false,\r\n        disableAdd:true,\r\n        feedbackDamageName1:\"none\",\r\n        feedbackDamageName2:\"none\",\r\n        feedbackDamageName3:\"none\",\r\n        feedbackDamage1Length:0,\r\n        feedbackDamage2Length:0,\r\n        feedbackDamage3Length:0,\r\n        feedbackDamage1Width:0,\r\n        feedbackDamage2Width:0,\r\n        feedbackDamage3Width:0,\r\n        feedbackComments:\"\"\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let backgroundImg = `linear-gradient(45deg, rgb(229, 44, 78) 1%, rgb(233, 74, 99) 30%, rgb(174, 82, 157) 69%, rgb(154, 85, 177) 100%)`;\r\n    const browserLang = this.props.browserLang || \"en\";\r\n    const configSectionWidth = this.state.twoImages? 4 : 8;\r\n    const visualSectionWidth = this.state.twoImages? 12: 8;\r\n    let tableData = [];\r\n    const usage = this.state.usage.map((usgObj)=>{\r\n      if(browserLang === \"en\"){\r\n        return {\r\n          text:usgObj.text,\r\n          value:usgObj.value\r\n        };\r\n      }else{\r\n          if(usgObj.value === \"qa\"){\r\n            return {\r\n              text:\"Aseguramiento de Calidad\",\r\n              value:usgObj.value\r\n            }\r\n          }else if(usgObj.value === \"quick-classification\"){\r\n            \r\n            return {text:\"Clasificación Rápida\",\r\n            value:usgObj.value}\r\n          }else if(usgObj.value === \"feedback\"){\r\n            return {text:\"Retroalimentación\",\r\n            value:usgObj.value}\r\n          }else{\r\n            return {text:\"Visualización\",\r\n            value:usgObj.value}\r\n          }\r\n        }\r\n      }\r\n    );\r\n    const imageDropdownOptions = this.state.headers.map((header, idx)=>{\r\n      return {\r\n        text:header,\r\n        value:idx\r\n      }\r\n    });    \r\n    // console.log(process.env.REACT_APP_PRODUCTION_SERVER_URL);\r\n    let fileNames = this.state.acceptedFiles.map((file)=>{\r\n      if(\"name\" in file){\r\n        return (<p key={file.name}>{file.name}</p>)\r\n      }else if(\"path\" in file){\r\n        return (<p key={file.path}>{file.path}</p>)\r\n      }else{\r\n        return (<p key=\"no-name\">{\"no-name\"}</p>)\r\n      }\r\n      \r\n    });\r\n    let images = this.state.images.map((imgUrl, idx)=>{\r\n      return (\r\n        <Magnifier\r\n          key={idx}\r\n          style={{\"maxWidth\":\"700px\"}}\r\n          imageSrc={imgUrl}\r\n          imageAlt=\"image\"\r\n          mouseActivation=\"click\" // Optional\r\n          touchActivation=\"tap\" // Optional\r\n        />\r\n        )\r\n    });\r\n    if(this.state.parsedCsvData && \"length\" in this.state.parsedCsvData){\r\n      tableData = this.state.parsedCsvData.slice(this.state.startingRow, this.state.startingRow+this.state.maxRowCount);\r\n    }\r\n    return (\r\n      <Fragment>\r\n        <header className=\"App-hero\" style={{\r\n          \"minHeight\":\"75px\",\r\n          \"backgroundImage\":backgroundImg,\r\n          \"color\":\"white\"\r\n        }}>\r\n        </header>\r\n        <div style={{\"paddingTop\":\"16px\",\"marginLeft\":\"40px\", \"marginRight\":\"40px\"}}>\r\n          <Grid stackable>\r\n            <Grid.Row columns={2}>\r\n                <Grid.Column width={configSectionWidth} style={{\"textAlign\":\"left\"}}>\r\n                  <Grid.Row>\r\n                    <h2>{browserLang === \"en\" ? \"Select Files (Only CSV)\":\"Seleccionar Archivo (Solo CSV)\"}</h2>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                      <Dropzone  onDrop={acceptedFiles => this.handleDrop(acceptedFiles)}>\r\n                      {({getRootProps, getInputProps}) => (\r\n                        <section>\r\n                          <div className=\"dropzone\" {...getRootProps()}>\r\n                            <input {...getInputProps()} />\r\n                            <p>{browserLang === \"en\" ? \"Drag 'n' drop some files here, or click to select files\":\"Arrastra los archivos aquí, o haz click para seleccionar archivo\"}</p>\r\n                          </div>\r\n                        </section>\r\n                      )}\r\n                </Dropzone>\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                      <h2>{browserLang === \"en\" ? \"Selected Files\" : \"Archivos seleccionados\"}</h2>\r\n                    </Grid.Row>\r\n                     <Grid.Row>\r\n                      <Segment>\r\n                        {fileNames}  \r\n                      </Segment>\r\n                    </Grid.Row>\r\n                    <Divider></Divider>\r\n                    <h2>{browserLang === \"en\" ? \"Configure Usage of This Tool\" : \"Configurar Uso de la Herramienta\"}</h2>\r\n                    <Grid.Row>\r\n                      <Dropdown\r\n                        search\r\n                        options = {usage}\r\n                        selection\r\n                        placeholder = {browserLang === \"en\" ? \"What do you want to accomplish with this tool?\" : \"¿Cuál es tu objectivo?\"}\r\n                        onChange = {(event, data)=>{\r\n                          this.setState({\r\n                            objective:data.value\r\n                          });\r\n                        }}\r\n                      >  \r\n                      </Dropdown>\r\n                    </Grid.Row>\r\n                    <Divider></Divider>\r\n                    <h2>{browserLang === \"en\" ? \"Configure Visualization\" : \"Configurar Visualización\"}</h2>\r\n                    <Grid.Row>\r\n                      <Checkbox checked={this.state.withHeaders}  onChange={(event, data)=>{\r\n                        this.setState({\r\n                          withHeaders:!this.state.withHeaders,\r\n                        })\r\n                      }} label={browserLang === \"en\" ? \"Data has headers\" : \"Las columnas tienen encabezados\"} toggle />\r\n                    </Grid.Row>\r\n                    <Divider hidden></Divider>\r\n                    <Grid.Row>\r\n                      <Checkbox checked={this.state.withImages}  onChange={(event, data)=>{\r\n                        this.setState({\r\n                          withImages:!this.state.withImages\r\n                        })\r\n                      }} label={browserLang === \"en\" ? \"Has Images?\" : \"¿Hay imágenes?\"} toggle />\r\n                    </Grid.Row>\r\n                    {this.state.parsedCsvData && this.state.parsedCsvData.length > 0  && this.state.withImages && (\r\n                      <Fragment>\r\n                        <Divider></Divider>\r\n                        <p> {browserLang === \"en\" ?  \"Select column that specifies image URL\": \"Selecciona la columna que especifica el URL de las imágenes\"}</p>\r\n                        <Dropdown\r\n                          search\r\n                          onChange={(event,data)=>{\r\n                            // console.log(data);\r\n                            this.setState({\r\n                              imagesColumn:data.value\r\n                            });\r\n                          }}\r\n                          placeholder={browserLang === \"en\" ?  \"Select column that specifies image URL\": \"Selecciona la columna que especifica el URL de las imágenes\"}\r\n                          fluid\r\n                          label={browserLang === \"en\" ?  \"Select column that specifies image URL\": \"Selecciona la columna que especifica el URL de las imágenes\"}\r\n                          selection\r\n                          options={imageDropdownOptions}\r\n                        >\r\n                          \r\n                        </Dropdown>\r\n                        <Divider></Divider>\r\n                        <h3>Configure second image</h3>\r\n                        <Grid.Row>\r\n                          <Checkbox name=\"twoImages\" checked={this.state.twoImages}  onChange={(event, data)=>{\r\n                            this.setState({\r\n                              twoImages:!this.state.twoImages\r\n                            })\r\n                          }} label={browserLang === \"en\" ? \"Visualize 2 images?\" : \"¿Ver 2 imágenes?\"} toggle />\r\n                        </Grid.Row>\r\n                        {this.state.twoImages &&(\r\n                          <Fragment>\r\n                            <Divider hidden></Divider>\r\n                            <p> {browserLang === \"en\" ?  \"Select column that specifies image URL of the second image\": \"Selecciona la columna que especifica el URL de las imágenes 2\"}</p>\r\n                              <Dropdown\r\n                                name = \"secondImageColumn\"\r\n                                search\r\n                                onChange={this.handleChange}\r\n                                placeholder={browserLang === \"en\" ?  \"Select column that specifies image URL\": \"Selecciona la columna que especifica el URL de las imágenes\"}\r\n                                fluid\r\n                                label={browserLang === \"en\" ?  \"Select column that specifies image URL\": \"Selecciona la columna que especifica el URL de las imágenes\"}\r\n                                selection\r\n                                options={imageDropdownOptions}\r\n                              >\r\n                                \r\n                              </Dropdown>\r\n                          </Fragment>\r\n                          )\r\n                        }\r\n                         <Divider></Divider>\r\n                         <p>{browserLang === \"en\" ?  \"Column with image name\": \"Columna con nombre de la imagen\"}</p>\r\n                        <Dropdown\r\n                          onChange={(event,data)=>{\r\n                            // console.log(data);\r\n                            this.setState({\r\n                              nameCol:data.value\r\n                            });\r\n                          }}\r\n                          search\r\n                          placeholder={browserLang === \"en\" ?  \"Column with image name\": \"Columna con nombre de la imagen\"}\r\n                          fluid\r\n                          label={browserLang === \"en\" ?  \"Column with image name\": \"Columna con nombre de la imagen\"}\r\n                          selection\r\n                          options={imageDropdownOptions}\r\n                        >\r\n                          \r\n                        </Dropdown>\r\n                        <Divider></Divider>\r\n                        <p>{browserLang === \"en\" ?  \"Column with damage name\": \"Columna con nombre del daño\"}</p>\r\n                        <Dropdown\r\n                          search\r\n                          onChange={(event,data)=>{\r\n                            // console.log(data);\r\n                            this.setState({\r\n                              damageCol:data.value\r\n                            });\r\n                          }}\r\n                          placeholder={browserLang === \"en\" ?  \"Column with damage name\": \"Columna con nombre del daño\"}\r\n                          label={browserLang === \"en\" ?  \"Column with damage name\": \"Columna con nombre del daño\"}\r\n                          fluid\r\n                          selection\r\n                          options={imageDropdownOptions}\r\n                        >\r\n                          \r\n                        </Dropdown>\r\n                      </Fragment>\r\n                      )}\r\n                    <Divider hidden></Divider>\r\n                </Grid.Column> \r\n                <Grid.Column width={visualSectionWidth}>\r\n                {\r\n                  this.state.withImages && (\r\n                      <Segment style={{\"position\":\"fixed\",\"zIndex\":\"2\",\"overflowY\":\"scroll\",\"maxHeight\":\"88vh\"}}>\r\n                          <h2>{browserLang === \"en\" ? \"Visualization\":\"Visualización\"}</h2>\r\n                          <Grid>\r\n                            <Grid.Row columns={this.state.twoImages ? 2:1}>\r\n                            {images.map((img,idx)=>{\r\n                              return (<Grid.Column key={idx}>\r\n                                {img}\r\n                              </Grid.Column>)\r\n                            })}  \r\n                          </Grid.Row>\r\n                          </Grid>\r\n                          {this.state.parsedCsvData && this.state.parsedCsvData.length > 1 && this.state.selectedRow &&  (\r\n                            <Fragment>\r\n                              <Divider></Divider>\r\n                                <p>Image name: {this.state.selectedRow[this.state.nameCol]}</p>  \r\n                                <p>Damage: {this.state.selectedRow[this.state.damageCol]}</p>\r\n                            </Fragment>\r\n                            )\r\n                          }\r\n                          {this.state.parsedCsvData && this.state.parsedCsvData.length > 1 && this.state.selectedRow && this.state.objective === \"qa\" &&  (\r\n                            <Fragment>\r\n                              <Divider></Divider>\r\n                              <p>{browserLang === \"en\" ? \"Is the damage correctly identified?\":\"¿Se identificó el daño de forma correcta?\"}</p>\r\n                              <Grid.Row>\r\n                                <Dropdown\r\n                                  search\r\n                                  name=\"qaDamageDetectedCorrectly\"\r\n                                  onChange={this.handleChange}\r\n                                  selection\r\n                                  value={this.state.qaDamageDetectedCorrectly}\r\n                                  options={[\r\n                                    {\r\n                                      text:browserLang === \"en\" ? \"Yes\":\"Si\", \r\n                                      value:true\r\n                                    },{\r\n                                      text:browserLang === \"en\" ? \"No\":\"No\", \r\n                                      value:false\r\n                                    }\r\n                                  ]}\r\n                                >                            \r\n                                </Dropdown>\r\n                              </Grid.Row>\r\n                              {this.state.qaDamageDetectedCorrectly === false && (\r\n                                <Fragment>\r\n                                    <p>{browserLang === \"en\" ? \"What's the correct damage?\" : \"¿Cuál es el daño correcto?\"}</p>\r\n                                    <Input name=\"qaCorrectedDamage\" onChange={this.handleChange} value={this.state.qaCorrectedDamage}>\r\n                                    </Input>  \r\n                                </Fragment>\r\n                                \r\n                                )}\r\n                              <Divider hidden></Divider>\r\n                              <Grid.Row>\r\n                                <Button disabled={this.state.disableAdd} loading={this.state.loading} onClick={this.handleSubmit} positive>{browserLang === \"en\" ? \"Add to new list\" : \"Agregar a lista nueva\"}</Button>\r\n                              </Grid.Row>\r\n                            </Fragment>\r\n                            )\r\n                          }\r\n                          {this.state.parsedCsvData && this.state.parsedCsvData.length > 1 && this.state.selectedRow && this.state.objective === \"quick-classification\" &&  (\r\n                            <Fragment>\r\n                              <Divider></Divider>\r\n                              <p>{browserLang === \"en\" ? \"Is there a damage?\":\"¿Se identifica un daño?\"}</p>\r\n                              <Grid.Row>\r\n                                <Dropdown\r\n                                  search\r\n                                  name=\"classificationIsDamaged\"\r\n                                  onChange={this.handleChange}\r\n                                  selection\r\n                                  value={this.state.classificationIsDamaged}\r\n                                  options={[\r\n                                    {\r\n                                      text:browserLang === \"en\" ? \"Yes\":\"Si\", \r\n                                      value:true\r\n                                    },{\r\n                                      text:browserLang === \"en\" ? \"No\":\"No\", \r\n                                      value:false\r\n                                    }\r\n                                  ]}\r\n                                >                            \r\n                                </Dropdown>\r\n                              </Grid.Row>\r\n                              {this.state.classificationIsDamaged === true && (\r\n                                <Fragment>\r\n                                    <p>{browserLang === \"en\" ? \"What's the damage?\" : \"¿Cuál es el daño?\"}</p>\r\n                                    <Input name=\"classificationDamageName\" onChange={this.handleChange} value={this.state.classificationDamageName}>\r\n                                    </Input>  \r\n                                </Fragment>\r\n                                \r\n                                )}\r\n                              <Divider hidden></Divider>\r\n                              <Grid.Row>\r\n                                <Button disabled={this.state.disableAdd} loading={this.state.loading} onClick={this.handleSubmit} positive>{browserLang === \"en\" ? \"Add to new list\" : \"Agregar a lista nueva\"}</Button>\r\n                              </Grid.Row>\r\n                            </Fragment>\r\n                            )\r\n                          }\r\n                          {this.state.parsedCsvData && this.state.parsedCsvData.length > 1 && this.state.selectedRow && this.state.objective === \"feedback\" &&  (\r\n                            <Fragment>\r\n                              <Divider></Divider>\r\n                              <p>{browserLang === \"en\" ? \"Is there a damage?\":\"¿Se identifica un daño?\"}</p>\r\n                              <Grid.Row>\r\n                                <Dropdown\r\n                                  search\r\n                                  name=\"feedbackImageHasDamage\"\r\n                                  onChange={this.handleChange}\r\n                                  selection\r\n                                  value={this.state.feedbackImageHasDamage}\r\n                                  options={[\r\n                                    {\r\n                                      text:browserLang === \"en\" ? \"Yes\":\"Si\", \r\n                                      value:true\r\n                                    },{\r\n                                      text:browserLang === \"en\" ? \"No\":\"No\", \r\n                                      value:false\r\n                                    }\r\n                                  ]}\r\n                                >                            \r\n                                </Dropdown>\r\n                              </Grid.Row>\r\n                              {this.state.feedbackImageHasDamage === true && (\r\n                                <Fragment>\r\n                                <Grid>\r\n                                  <Grid.Row columns='equal'>\r\n                                    <Grid.Column >\r\n                                      <p>{browserLang === \"en\" ? \"Damage 1\" : \"Daño 1\"}</p>\r\n                                      <Input name=\"feedbackDamageName1\" onChange={this.handleChange} value={this.state.feedbackDamageName1}>\r\n                                      </Input>\r\n                                    </Grid.Column>\r\n                                    <Grid.Column>\r\n                                      <p>{browserLang === \"en\" ? \"Length (m) 1\" : \"Longitud (m) 1\"}</p>\r\n                                      <Input name=\"feedbackDamage1Length\" onChange={this.handleChange} value={this.state.feedbackDamage1Length}>\r\n                                      </Input>  \r\n                                    </Grid.Column>\r\n                                    <Grid.Column>\r\n                                      <p>{browserLang === \"en\" ? \"Width (m) 1\" : \"Ancho (m) 1\"}</p>\r\n                                        <Input name=\"feedbackDamage1Width\" onChange={this.handleChange} value={this.state.feedbackDamage1Width}>\r\n                                        </Input>  \r\n                                    </Grid.Column>\r\n                                  </Grid.Row>\r\n                                  <Grid.Row columns='equal'>\r\n                                    <Grid.Column>\r\n                                      <p>{browserLang === \"en\" ? \"Damage 2\" : \"Daño 2\"}</p>\r\n                                      <Input name=\"feedbackDamageName2\" onChange={this.handleChange} value={this.state.feedbackDamageName2}>\r\n                                      </Input>\r\n                                    </Grid.Column>\r\n                                    <Grid.Column>\r\n                                      <p>{browserLang === \"en\" ? \"Length (m) 2\" : \"Longitud (m) 2\"}</p>\r\n                                      <Input name=\"feedbackDamage2Length\" onChange={this.handleChange} value={this.state.feedbackDamage2Length}>\r\n                                      </Input>  \r\n                                    </Grid.Column>\r\n                                    <Grid.Column>\r\n                                      <p>{browserLang === \"en\" ? \"Width (m) 2\" : \"Ancho (m) 2\"}</p>\r\n                                        <Input name=\"feedbackDamage2Width\" onChange={this.handleChange} value={this.state.feedbackDamage2Width}>\r\n                                        </Input>  \r\n                                    </Grid.Column>\r\n                                  </Grid.Row>\r\n                                  <Grid.Row columns='equal'>\r\n                                    <Grid.Column>\r\n                                      <p>{browserLang === \"en\" ? \"Damage 3\" : \"Daño 3\"}</p>\r\n                                      <Input name=\"feedbackDamageName3\" onChange={this.handleChange} value={this.state.feedbackDamageName3}>\r\n                                      </Input>\r\n                                    </Grid.Column>\r\n                                    <Grid.Column>\r\n                                      <p>{browserLang === \"en\" ? \"Length (m) 3\" : \"Longitud (m) 3\"}</p>\r\n                                      <Input name=\"feedbackDamage3Length\" onChange={this.handleChange} value={this.state.feedbackDamage3Length}>\r\n                                      </Input>  \r\n                                    </Grid.Column>\r\n                                    <Grid.Column>\r\n                                      <p>{browserLang === \"en\" ? \"Width (m) 3\" : \"Ancho (m) 3\"}</p>\r\n                                        <Input name=\"feedbackDamage3Width\" onChange={this.handleChange} value={this.state.feedbackDamage3Width}>\r\n                                        </Input>  \r\n                                    </Grid.Column>\r\n                                  </Grid.Row>\r\n                                  <Grid.Row columns='equal'>\r\n                                    <Grid.Column>\r\n                                      <Form>\r\n                                        <p>{browserLang === \"en\" ? \"Comments\" : \"Comentarios\"}</p>\r\n                                        <TextArea placeholder={browserLang === \"en\" ? \"Comments\" : \"Comentarios\"} label= {browserLang === \"en\" ? \"Comments\" : \"Comentarios\"} name=\"feedbackComments\" onChange={this.handleChange} value={this.state.feedbackComments}></TextArea>\r\n                                      </Form>\r\n                                    </Grid.Column>\r\n                                  </Grid.Row>\r\n                                </Grid>\r\n                                </Fragment>\r\n                                \r\n                                )}\r\n                              <Divider hidden></Divider>\r\n                              <Grid.Row>\r\n                                <Button disabled={this.state.disableAdd} loading={this.state.loading} onClick={this.handleSubmit} positive>{browserLang === \"en\" ? \"Add to new list\" : \"Agregar a lista nueva\"}</Button>\r\n                              </Grid.Row>\r\n                            </Fragment>\r\n                            )\r\n                          }\r\n                          <Divider></Divider>\r\n                          <Grid.Row>\r\n                          <h2>{browserLang === \"en\" ? \"Download\" : \"Descarga\"}</h2>\r\n                        </Grid.Row>\r\n                         {this.state.qaGenerated.length > 0 && (\r\n                            <Fragment>\r\n                              <Grid.Row>\r\n                                 <p>{browserLang === \"en\" ?  \"Quality Assurance\" : \"Aseguramiento de Calidad\"}</p>\r\n                              </Grid.Row>\r\n                              <Grid.Row>\r\n                                <CSVLink filename={\"engin-ai-qa-export.csv\"} data={this.state.qaGenerated}>{browserLang===\"en\" ? \"Download QA document\" : \"Descargar documento QA\"}</CSVLink>\r\n                              </Grid.Row>\r\n                              <Divider hidden></Divider>\r\n                            </Fragment>\r\n                            )}\r\n                          {this.state.classificationGenerated.length > 0 && (\r\n                            <Fragment>\r\n                              <Grid.Row>\r\n                                <p>{browserLang === \"en\" ?  \"Quick Classification\" : \"Clasificación Rápida\"}</p>\r\n                              </Grid.Row>\r\n                              <Grid.Row>\r\n                                <CSVLink filename={\"engin-ai-classification-export.csv\"} data={this.state.classificationGenerated}>{browserLang===\"en\" ? \"Download Classification document\" : \"Descargar documento clasificado\"}</CSVLink>\r\n                              </Grid.Row>\r\n                            </Fragment>                  \r\n                            )}\r\n                           {this.state.feedbackGenerated.length > 0 && (\r\n                            <Fragment>\r\n                              <Grid.Row>\r\n                                <p>{browserLang === \"en\" ? \"Feedback\" : \"Retroalimentación\"}</p>\r\n                              </Grid.Row>\r\n                              <Grid.Row>\r\n                                <CSVLink filename={\"engin-ai-feedback-export.csv\"} data={this.state.feedbackGenerated}>{browserLang===\"en\" ? \"Download feedback document\" : \"Descargar documento de retroalimentación\"}</CSVLink>\r\n                              </Grid.Row>\r\n                            </Fragment>                  \r\n                            )}\r\n                        </Segment>\r\n                    )\r\n                }\r\n                </Grid.Column>  \r\n            </Grid.Row>\r\n            {this.state.parsedCsvData && \"length\" in this.state.parsedCsvData && (\r\n              <Fragment>\r\n               <Grid.Row>\r\n                  <h2>{browserLang === \"en\" ? \"Table Controllers\" : \"Controladores de tabla\"}</h2>\r\n                </Grid.Row>\r\n                <Grid.Row>\r\n                    <Button color=\"blue\" onClick={()=>{\r\n                      this.setState({\r\n                        startingRow:1\r\n                      });\r\n                    }}>Start</Button>\r\n                    <Button color=\"yellow\" onClick={()=>{\r\n                      let newStartingRow = this.state.startingRow - this.state.maxRowCount;\r\n                      if(newStartingRow > 1){\r\n                        this.setState({\r\n                        startingRow:newStartingRow\r\n                      });\r\n                      }\r\n                    }}>Previous</Button>\r\n                    <Button color=\"green\" onClick={()=>{\r\n                      let newStartingRow = this.state.startingRow + this.state.maxRowCount;\r\n                      if(newStartingRow < this.state.parsedCsvData.length){\r\n                        this.setState({\r\n                          startingRow:newStartingRow\r\n                        });\r\n                      }\r\n                    }}>Next</Button>\r\n                     <Button color=\"blue\" onClick={()=>{\r\n                      this.setState({\r\n                        startingRow:this.state.parsedCsvData.length - this.state.maxRowCount\r\n                      });\r\n                    }}>End</Button>\r\n                </Grid.Row>\r\n                <Grid.Row>\r\n                  <p>{browserLang === \"en\" ? `Count` : `Cuenta`}</p>\r\n                </Grid.Row>\r\n                <Grid.Row>\r\n                  <p>{`${this.state.startingRow} - ${this.state.maxRowCount + this.state.startingRow}/${this.state.parsedCsvData.length}`}</p>\r\n                </Grid.Row>\r\n                <Grid.Row>\r\n                  <Input\r\n                    type=\"number\"\r\n                    value={this.state.startingRowCustomize}\r\n                    name =\"startingRowCustomize\"\r\n                    onChange={(event, data)=>{\r\n                      this.setState({\r\n                        startingRowCustomize:parseInt(data.value, 10)\r\n                      });\r\n                    }}\r\n                    placeholder = {browserLang === \"en\" ? \"Customize Starting Row\":\"Personaliza la fila de inicio\"}\r\n                    label = {browserLang === \"en\" ? \"Customize Starting Row\":\"Personaliza la fila de inicio\"}\r\n                    icon={<Icon name='search' inverted circular link onClick={()=>{\r\n                      if(this.state.startingRowCustomize <= this.state.parsedCsvData.length && this.state.startingRowCustomize > 0 ){\r\n                        this.setState({\r\n                          startingRow:this.state.startingRowCustomize\r\n                        });\r\n                      }\r\n                    }}/>}\r\n                  >  \r\n                  </Input>\r\n                </Grid.Row>\r\n                <Grid.Row>\r\n                  <Grid.Column width={configSectionWidth} style={{\"overflowX\":\"scroll\"}}>\r\n                       <Table\r\n                        color=\"purple\"\r\n                        headerRow={this.state.headers}\r\n                        compact\r\n                        selectable\r\n                        tableData = {tableData}\r\n                        renderBodyRow = {(data, index)=>{\r\n                          let cells = data.map((item, idx)=>{\r\n                            return (\r\n                              <Table.Cell key={idx}>\r\n                                {item}\r\n                              </Table.Cell>\r\n                              );\r\n                          });\r\n                          return (\r\n                            <Table.Row key={index} style={{\"cursor\":\"pointer\", \"color\": index === this.state.selectedRowIdx ? \"red\":\"black\", \"background\":index === this.state.selectedRowIdx ? \"whitesmoke\":\"white\"}} onClick={()=>{\r\n                              let overallPosition = index;\r\n\r\n                              if(this.state.withImages && this.state.imagesColumn){\r\n                                let imageArr = [data[this.state.imagesColumn]];\r\n                                if(this.state.twoImages){\r\n                                  imageArr = [...imageArr, data[this.state.secondImageColumn]]\r\n                                }\r\n                                this.setState({\r\n                                  images:imageArr,\r\n                                  selectedRow:data,\r\n                                  disableAdd:false,\r\n                                  selectedRowIdx:index\r\n                                });\r\n                              }\r\n                              }\r\n                            }>\r\n                            {cells}\r\n                            </Table.Row>\r\n                            )\r\n                        }}\r\n                  >\r\n                  </Table>\r\n                  </Grid.Column>\r\n              </Grid.Row>\r\n              </Fragment>\r\n              )\r\n            }\r\n        </Grid>  \r\n        </div>\r\n          \r\n      </Fragment>\r\n      \r\n     \r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageVisualizer;","import React from \"react\";\r\nimport '../App.css';\r\nimport { HashRouter as Router , Route, Switch } from \"react-router-dom\";\r\nimport Homepage from \"../Homepage\";\r\nimport DataLabeling from \"../components/DataLabeling\";\r\nimport DamageAnalysis from \"../components/DamageAnalysis\";\r\nimport AiConsulting from \"../components/AiConsulting\";\r\nimport Demo from \"./Demo\";\r\nimport ImageVisualizer from \"./ImageVisualizer\";\r\n\r\nclass Main extends React.Component {\r\nconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {};\r\n\t}\r\n  render() {\r\n    return (\r\n      <Router>\r\n      <Switch>\r\n        <Route\r\n        path=\"/data-labeling\"\r\n         render={\r\n          props=>(\r\n            <DataLabeling browserLang={this.props.browserLang} {...this.props}></DataLabeling>\r\n          )\r\n         }\r\n         >\r\n         </Route>\r\n          <Route\r\n        path=\"/pavements-analysis\"\r\n         render={\r\n          props=>(\r\n            <DamageAnalysis browserLang={this.props.browserLang} {...this.props}></DamageAnalysis>\r\n          )\r\n         }\r\n         >\r\n         </Route>\r\n         <Route\r\n        path=\"/ai-consulting\"\r\n         render={\r\n          props=>(\r\n            <AiConsulting browserLang={this.props.browserLang} {...this.props}></AiConsulting>\r\n          )\r\n         }\r\n         >\r\n         </Route>\r\n         <Route\r\n        path=\"/demo\"\r\n         render={\r\n          props=>(\r\n            <Demo browserLang = {this.props.browserLang} {...this.props}></Demo> \r\n          )\r\n         }\r\n         >\r\n         </Route>\r\n         <Route\r\n        path=\"/visualize\"\r\n         render={\r\n          props=>(\r\n            <ImageVisualizer browserLang = {this.props.browserLang} {...this.props}></ImageVisualizer> \r\n          )\r\n         }\r\n         >\r\n         </Route>\r\n        <Route\r\n        exact path=\"/\"\r\n         render={\r\n          props=>(\r\n            <Homepage browserLang={this.props.browserLang} {...this.props}></Homepage>\r\n          )\r\n         }\r\n         >\r\n          \r\n        </Route>\r\n      </Switch>\r\n      \r\n      </Router>\r\n      \r\n      );\r\n  }\r\n}\r\n\r\nexport default Main;","import React from 'react';\nimport Navbar from './Navbar';\nimport './App.css';\nimport detectBrowserLanguage from 'detect-browser-language';\nimport { HashRouter as Router } from 'react-router-dom';\nimport Main from \"./containers/Main\";\n\nfunction App() {\n  const browserLang = detectBrowserLanguage().toLowerCase();\n  return (\n    <div style={{\"overflow\":\"hidden\"}}>\n      <div className=\"App\">\n      <Router>\n        <Navbar browserLang={browserLang}></Navbar>\n        <Main browserLang={browserLang}>\n        </Main>\n      </Router>      \n      \n    </div>\n    </div>\n      \n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}