{"version":3,"sources":["../../temp/landing/src/images/burger-icon-01.svg","../../temp/landing/src/logo.svg","../../temp/landing/src/images/JP_Clipboard_Image.png","../../temp/landing/src/Homepage.js","../../temp/landing/src/Navbar.js","../../temp/landing/src/App.js","../../temp/landing/src/serviceWorker.js","../../temp/landing/src/index.js","../../temp/landing/src/images/white-logo-plus-name-final-01.svg"],"names":["module","exports","__webpack_require__","p","Homepage","props","spanish","browserLang","indexOf","react_default","a","createElement","Segment","basic","style","width","textTransform","Button","className","inverted","color","size","syle","href","display","Icon","name","Navbar","state","handleItemClick","e","_ref","_this","setState","activeItem","this","react","Responsive","onlyComputer","margin","position","Menu","secondary","Item","Image","src","Logo","onlyMobile","height","Burger","Component","App","detectBrowserLanguage","toLowerCase","overflow","Navbar_Navbar","src_Homepage","Container","Grid","centered","stackable","columns","Column","container","Row","compact","padding","verticalAlign","Embed","id","hd","defaultActive","brandedUI","source","autoplay","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.261e3d4e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/burger-icon-01.eef32ba4.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/JP_Clipboard_Image.47d82316.png\";","import React, {Component} from 'react';\nimport { Responsive, Segment, Button, Icon } from 'semantic-ui-react';\nimport './App.css';\n\nconst Homepage = (props)=>{\n\tconst browserLang = props.browserLang;\n\tconst spanish = browserLang.indexOf(\"es\") > -1;\n\treturn (\n\t\t<Segment basic style={{width:\"70%\"}}>\n\t\t\t<h1 style={{\"textTransform\": \"uppercase\"}}>\n\t\t\t{spanish ? (\n\t\t\t\t\"Empoderamos su negocio con inteligencia artificial\"\n\t\t\t\t):\n\t\t\t\t\"Empowering your business with artificial intelligence\"}\n\t\t\t\n\t\t\t</h1>\n\t\t\t<br/>\n\t\t\t<br/>\n\t\t\t<h2>{spanish ? \n\t\t\t\t\"Engin.ai es su aliado estratégico\" : \n\t\t\t\t\"Engin.ai is your strategic partner\"}</h2>\n\t\t\t<br/>\n\t\t\t<Button className=\"mainCTABtn\" inverted color=\"white\" size=\"huge\" syle={{\"width\":\"50%\"}} href=\"#contact-us\">\n\t\t\t\t{spanish?\n\t\t\t\t\t<span className=\"buttonText\">Contáctenos</span> \n\t\t\t\t\t : \n\t\t\t\t\t<span>Contact Us</span>}\n\t\t\t\t<span className =\"iconContainer\" style={{\"display\":\"inline-block\", \"width\":\"10px\"}}>\n\t\t\t\t\t<Icon name=\"chevron right\">\n\t\t\t\t\t\t\n\t\t\t\t\t</Icon>\n\t\t\t\t</span>\n\t\t\t</Button>\n\t\t</Segment>\n\t\t\n\t\t);\n\n}\n\n\nexport default Homepage;","import React, { Component, Fragment } from 'react';\nimport { Menu, Segment, Image, Responsive,Icon } from 'semantic-ui-react';\nimport Logo from \"./images/white-logo-plus-name-final-01.svg\";\nimport Burger from \"./images/burger-icon-01.svg\";\nimport './App.css';\n\nexport default class Navbar extends Component {\n  state = {}\n\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name })\n\n  render() {\n    const { activeItem } = this.state\n    const browserLang = this.props.browserLang;\n    return (\n      <Fragment>\n        <Responsive {...Responsive.onlyComputer}>\n        <Segment className=\"App-nav\" inverted style={{margin:\"0\",position:\"absolute\",\"width\":\"100%\"}}>\n        <Menu inverted secondary>\n        <Menu.Item>\n        <Image size=\"small\" src={Logo}>\n          \n        </Image>\n        </Menu.Item>         \n          \n        </Menu>\n      </Segment>\n       </Responsive>\n       <Responsive {...Responsive.onlyMobile}>\n        <Segment className=\"App-nav\" inverted style={{margin:\"0\",position:\"absolute\",\"width\":\"100%\"}}>\n        <Menu inverted secondary>\n          <Menu.Item>\n            <Image size=\"small\" src={Logo}>\n              \n            </Image>\n          </Menu.Item>\n          <Menu.Menu position=\"right\">\n            <Menu.Item>\n               <Image style={{\"width\":\"38px\", \"height\":\"29px\"}} size=\"tiny\" src={Burger}/>\n            </Menu.Item>\n          </Menu.Menu>\n        </Menu>\n      </Segment>\n       </Responsive>\n      </Fragment>\n       \n      \n    )\n  }\n}","import React from 'react';\nimport logo from './logo.svg';\nimport Homepage from './Homepage';\nimport Navbar from './Navbar';\nimport { Responsive, Menu, Grid, Container, Segment,Icon,Embed, Button, Divider } from 'semantic-ui-react';\nimport './App.css';\nimport BackgroundImage from \"./images/JP_Clipboard_Image.png\"\nimport detectBrowserLanguage from 'detect-browser-language';\n\n\nfunction App() {\n  const browserLang = detectBrowserLanguage().toLowerCase();\n  const spanish = browserLang.indexOf(\"es\") > -1;\n  return (\n    <div style={{\"overflow\":\"hidden\"}}>\n      <div className=\"App\">\n      <Navbar browserLang={browserLang}></Navbar>\n      <header className=\"App-header\">\n        <Homepage browserLang={browserLang}>\n          \n        </Homepage>\n      </header>\n      <section>\n      \n        <Container>\n          <h1>{spanish? \"Cómo Funciona\":\"How it works\"}</h1>  \n          <Grid centered stackable columns={3}>\n            <Grid.Column>\n              <Segment>\n                <Grid container centered>\n                  <Grid.Row>\n                    <Icon name=\"cloud upload\" size=\"big\" color=\"purple\"></Icon>\n                  </Grid.Row>\n                  <Grid.Row>\n                    <h2>{spanish? \"Envío\":\"Upload\"}</h2>\n                  </Grid.Row>\n                  <Grid.Row>\n                    <Segment compact basic size=\"large\" style={{\"padding\":\"0\"}}>\n                      {spanish? \"Envíanos de forma segura los datos que necesitas analizar\":\n                      \"Send us the data that you need to analyze\"}\n                    </Segment>\n                  </Grid.Row>\n                </Grid>\n              </Segment>\n            </Grid.Column>\n            <Grid.Column>\n              <Segment>\n                 <Grid container centered>\n                  <Grid.Row>\n                    <Icon name=\"cogs\" size=\"big\" color=\"purple\"></Icon>\n                  </Grid.Row>\n                  <Grid.Row>\n                    <h2>{spanish? \"Análisis\":\"Analyze\"}</h2>\n                  </Grid.Row>\n                  <Grid.Row>\n                    <Segment compact basic size=\"large\" style={{\"padding\":\"0\"}}>\n                      {spanish? \"Nosotros analizamos los datos con nuestros algoritmos de visión computacional\":\n                      \"We analyze the data using our computer vision algorithms\"}\n                    </Segment>\n                  </Grid.Row>\n                </Grid>\n              </Segment>\n            </Grid.Column>\n            <Grid.Column>\n              <Segment>\n                 <Grid container centered>\n                  <Grid.Row>\n                    <Icon name=\"map\" size=\"big\" color=\"purple\"></Icon>\n                  </Grid.Row>\n                  <Grid.Row>\n                    <h2>{spanish? \"Reporte\":\"Report\"}</h2>\n                  </Grid.Row>\n                  <Grid.Row>\n                    <Segment compact basic size=\"large\" style={{\"padding\":\"0\"}}>\n                      {spanish? \"Recibe un reporte con el insight que necesitas para tomar decisiones informadas\":\n                      \"Receive a report with the insight that you need to make informed decisions\"}\n                    </Segment>\n                  </Grid.Row>\n                </Grid>\n              </Segment>\n            </Grid.Column>\n          </Grid>\n        </Container>\n        \n      </section>\n      <section>\n        <Grid container stackable columns={2} verticalAlign='middle'>\n          <Grid.Column>\n            <Embed id=\"Qha3sMSNIEM\" hd defaultActive brandedUI color=\"purple\" source=\"youtube\" autoplay={true}>\n              \n            </Embed>\n          </Grid.Column>\n          <Grid.Column>\n              <h1>{spanish? \"El programa en acción\":\"Our program in action\"}</h1>\n              <Segment basic size=\"massive\">\n                niam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu\n              </Segment>\n              <Button className=\"CTA-2\" size=\"huge\" href=\"#contact-us\">\n                {spanish? \"Aprender más\": \"Learn more\"}\n              </Button>\n          </Grid.Column>\n        </Grid>\n      </section>\n      <section className=\"purpleBack\" >\n        <Grid container stackable columns={2} verticalAlign='middle'>\n          \n          <Grid.Column>\n              <h1>{spanish? \"Por qué escoger a Engin.ai\":\"Why Choose Engin.ai\"}</h1>\n              <Segment basic size=\"massive\">\n                niam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu\n              </Segment>\n          </Grid.Column>\n          <Grid.Column>\n            \n          </Grid.Column>\n        </Grid>\n      </section>\n      <section className=\"cta-section\" id=\"contact-us\">\n      <Grid.Row centered>\n        <h1>{spanish? \"Contáctenos\": \"Contact Us\"}</h1>\n      </Grid.Row>\n        <Grid container stackable columns={2} verticalAlign='middle'>\n          \n          <Grid.Column>\n              <h1>{spanish? \"Por qué escoger a Engin.ai\":\"Why Choose Engin.ai\"}</h1>\n              <Segment basic size=\"massive\">\n                niam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu\n              </Segment>\n          </Grid.Column>\n          <Grid.Column>\n            \n          </Grid.Column>\n        </Grid>\n      </section>\n    </div>\n    </div>\n      \n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/white-logo-plus-name-final-01.ae4733f6.svg\";"],"sourceRoot":""}